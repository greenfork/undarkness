/* Generated by the Nim Compiler v0.20.2 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI170587 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI73907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI189211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI55083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI55084 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI169761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI169757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI169137 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI169713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI169701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI169714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI169705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI42565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI42563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI42561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI42231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI189207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI189209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI42283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI258615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4054 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI224039 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4052 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI255111 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI257017 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI257015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI229245 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI10287 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI229202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI229206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI229204 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI174256 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI229234 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI229231 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI229228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4060 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI21156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4114 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI4108 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI4026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI4050 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4050.node = NNI4050;
var NNI4028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4028.node = NNI4028;
NTI4108.base = NTI4026;
NTI4114.base = NTI4026;
var NNI4026 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI4108, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI4114, name: "up", sons: null}]};
NTI4026.node = NNI4026;
var NNI4008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4008.node = NNI4008;
NTI4026.base = NTI4008;
NTI4028.base = NTI4026;
NTI4050.base = NTI4028;
var NNI21156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI21156.node = NNI21156;
var NNI4062 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4062.node = NNI4062;
NTI4062.base = NTI4028;
var NNI4060 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4060.node = NNI4060;
NTI4060.base = NTI4028;
var NNI4046 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4046.node = NNI4046;
var NNI4042 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4042.node = NNI4042;
NTI4042.base = NTI4028;
NTI4046.base = NTI4042;
var NNI4044 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4044.node = NNI4044;
NTI4044.base = NTI4042;
var NNI4058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4058.node = NNI4058;
NTI4058.base = NTI4028;
var NNI229202 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI229202, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI229202, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI229202, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI229202, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI229202, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI229202, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI229202, name: "JArray", len: 0, sons: null}}};
NTI229202.node = NNI229202;
NTI229245.base = NTI229204;
var NNI229206 = {kind: 3, offset: "kind", len: 7, typ: NTI229202, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI138, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI10287, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI124, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI130, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI229228, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI229245, name: "elems", sons: null}]]};
NTI229206.node = NNI229206;
NTI229204.base = NTI229206;
var NNI229234 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI174256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI229204, name: "Field3", sons: null}]};
NTI229234.node = NNI229234;
NTI229231.base = NTI229234;
var NNI229228 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI229231, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI229228.node = NNI229228;
var NNI255111 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "response", len: 0, typ: NTI138, name: "response", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI138, name: "path", sons: null}]};
NTI255111.node = NNI255111;
NTI257017.base = NTI255111;
var NNI257015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "title", len: 0, typ: NTI138, name: "title", sons: null}, 
{kind: 1, offset: "choices", len: 0, typ: NTI257017, name: "choices", sons: null}]};
NTI257015.node = NNI257015;
var NNI4052 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4052.node = NNI4052;
var NNI4030 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4030.node = NNI4030;
NTI4030.base = NTI4026;
NTI4052.base = NTI4030;
var NNI224039 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI224039.node = NNI224039;
NTI224039.base = NTI4052;
var NNI4054 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4054.node = NNI4054;
NTI4054.base = NTI4052;
NTI258615.base = NTI255111;
var NNI42283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI42283.node = NNI42283;
NTI42283.base = NTI4008;
var NNI189207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI189207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI189207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI189207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI189207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI189207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI189207, name: "pkSame", len: 0, sons: null}}};
NTI189207.node = NNI189207;
NTI42561.base = NTI42229;
NTI42563.base = NTI42229;
NTI42565.base = NTI42229;
var NNI42227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI42227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI42227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI42227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI42227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI42227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI42227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI42227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI42227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI42227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI42227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI42227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI42227, name: "NotationNode", len: 0, sons: null}}};
NTI42227.node = NNI42227;
NTI42281.base = NTI42283;
var NNI42231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI42561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI42563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI42565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI42229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI42229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI42229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI42227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI42229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI42229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI42281, name: "style", sons: null}]};
NTI42231.node = NNI42231;
var NNI42205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI42372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI42376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI42380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI42384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI42388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI42392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI42396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI42400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI42404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI42408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI42412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI42416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI42420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI42424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI42428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI42432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI42436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI42440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI42444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI42448, name: "onunload", sons: null}]};
NTI42205.node = NNI42205;
NTI42205.base = NTI4008;
NTI42231.base = NTI42205;
NTI42229.base = NTI42231;
var NNI169015 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI169015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI169015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI169015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI169015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI169015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI169015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI169015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI169015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI169015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI169015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI169015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI169015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI169015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI169015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI169015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI169015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI169015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI169015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI169015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI169015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI169015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI169015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI169015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI169015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI169015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI169015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI169015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI169015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI169015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI169015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI169015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI169015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI169015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI169015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI169015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI169015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI169015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI169015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI169015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI169015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI169015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI169015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI169015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI169015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI169015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI169015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI169015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI169015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI169015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI169015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI169015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI169015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI169015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI169015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI169015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI169015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI169015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI169015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI169015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI169015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI169015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI169015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI169015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI169015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI169015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI169015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI169015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI169015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI169015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI169015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI169015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI169015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI169015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI169015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI169015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI169015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI169015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI169015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI169015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI169015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI169015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI169015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI169015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI169015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI169015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI169015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI169015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI169015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI169015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI169015, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI169015, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI169015, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI169015, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI169015, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI169015, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI169015, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI169015, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI169015, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI169015, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI169015, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI169015, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI169015, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI169015, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI169015, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI169015, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI169015, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI169015, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI169015, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI169015, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI169015, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI169015, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI169015, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI169015, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI169015, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI169015, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI169015, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI169015, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI169015, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI169015, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI169015, name: "menu", len: 0, sons: null}}};
NTI169015.node = NNI169015;
NTI169720.base = NTI169705;
NTI169722.base = NTI140;
var NNI169137 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI169137, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI169137, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI169137, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI169137, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI169137, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI169137, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI169137, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI169137, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI169137, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI169137, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI169137, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI169137, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI169137, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI169137, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI169137, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI169137, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI169137, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI169137, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI169137, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI169137, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI169137, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI169137, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI169137, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI169137, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI169137, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI169137, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI169137, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI169137, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI169137, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI169137, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI169137, name: "onkeyuplater", len: 0, sons: null}}};
NTI169137.node = NNI169137;
var NNI169713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI169137, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI169757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI169761, name: "Field2", sons: null}]};
NTI169713.node = NNI169713;
NTI169701.base = NTI169713;
var NNI55083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55083.node = NNI55083;
NTI55084.base = NTI55083;
var NNI169714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI169015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI140, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI140, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI169720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI169722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI169701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI55084, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI42229, name: "dom", sons: null}]};
NTI169714.node = NNI169714;
NTI169714.base = NTI4008;
NTI169705.base = NTI169714;
var NNI189209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI189207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI42229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI42229, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI169705, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI169705, name: "oldNode", sons: null}]};
NTI189209.node = NNI189209;
var NNI189211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI169705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI169705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI189211.node = NNI189211;
var NNI73907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI104, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI73907.node = NNI73907;
NTI170587.base = NTI140;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24427, src_24428, ti_24429) {
	var result_24619 = null;

		switch (ti_24429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24401(ti_24429))) {
			result_24619 = src_24428;
			}
			else {
				result_24619 = [src_24428[0], src_24428[1]];
			}
			
			break;
		case 19:
			      if (dest_24427 === null || dest_24427 === undefined) {
        dest_24427 = {};
      }
      else {
        for (var key in dest_24427) { delete dest_24427[key]; }
      }
      for (var key in src_24428) { dest_24427[key] = src_24428[key]; }
      result_24619 = dest_24427;
    
			break;
		case 18:
		case 17:
			if (!((ti_24429.base == null))) {
			result_24619 = nimCopy(dest_24427, src_24428, ti_24429.base);
			}
			else {
			if ((ti_24429.kind == 17)) {
			result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {m_type: ti_24429} : dest_24427;
			}
			else {
				result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {} : dest_24427;
			}
			}
			nimCopyAux(result_24619, src_24428, ti_24429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24428 === null) {
        result_24619 = null;
      }
      else {
        if (dest_24427 === null || dest_24427 === undefined) {
          dest_24427 = new Array(src_24428.length);
        }
        else {
          dest_24427.length = src_24428.length;
        }
        result_24619 = dest_24427;
        for (var i = 0; i < src_24428.length; ++i) {
          result_24619[i] = nimCopy(result_24619[i], src_24428[i], ti_24429.base);
        }
      }
    
			break;
		case 28:
			      if (src_24428 !== null) {
        result_24619 = src_24428.slice(0);
      }
    
			break;
		default: 
			result_24619 = src_24428;
			break;
		}

	return result_24619;

}

function makeNimstrLit(c_23254) {
		  var ln = c_23254.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23254.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_24686, value_24687, typ_24688) {
		    var result = new Array(len_24686);
    for (var i = 0; i < len_24686; ++i) result[i] = nimCopy(null, value_24687, typ_24688);
    return result;
  

	
}

function cstrToNimstr(c_23271) {
		  var ln = c_23271.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23271.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23271.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_23288) {
		  if (s_23288 === null) return "";
  var len = s_23288.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_23288[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_23288[i] < 128)
      asciiPart[i] = fcc(s_23288[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		e_21618.trace = nimCopy(null, raw_write_stack_trace_21468(), NTI138);
		throw e_21618;

	
}

function chckRange(i_24724, a_24725, b_24726) {
			var Tmp1;

	var result_24727 = 0;

	BeforeRet: do {
			if (!(a_24725 <= i_24724)) Tmp1 = false; else {				Tmp1 = (i_24724 <= b_24726);			}		if (Tmp1) {
		result_24727 = i_24724;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_24727;

}
var ConstSet2 = setConstr(6);

function raiseFieldError(f_23039) {
		var e_23042 = null;
		e_23042 = {m_type: NTI4060, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_23042.message = nimCopy(null, (f_23039 || []).concat(makeNimstrLit(" is not accessible") || []), NTI138);
		e_23042.parent = null;
		raiseException(e_23042, "FieldError");

	
}

function addInt(a_23603, b_23604) {
		    var result = a_23603 + b_23604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function divInt(a_23657, b_23658) {
		    if (b_23658 == 0) raiseDivByZero();
    if (b_23658 == -1 && a_23657 == 2147483647) raiseOverflow();
    return Math.trunc(a_23657 / b_23658);
  

	
}

function subInt(a_23621, b_23622) {
		    var result = a_23621 - b_23622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_24705, a_24706, b_24707) {
			var Tmp1;

	var result_24708 = 0;

	BeforeRet: do {
			if (!(a_24706 <= i_24705)) Tmp1 = false; else {				Tmp1 = (i_24705 <= b_24707);			}		if (Tmp1) {
		result_24708 = i_24705;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_24705, a_24706, b_24707);
		}
		
	} while (false);

	return result_24708;

}

function eqStrings(a_23483, b_23484) {
		    if (a_23483 == b_23484) return true;
    if (a_23483 === null && b_23484.length == 0) return true;
    if (b_23484 === null && a_23483.length == 0) return true;
    if ((!a_23483) || (!b_23484)) return false;
    var alen = a_23483.length;
    if (alen != b_23484.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_23483[i] != b_23484[i]) return false;
    return true;
  

	
}

function mulInt(a_23639, b_23640) {
		    var result = a_23639 * b_23640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet3 = setConstr(5);

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function mnewString(len_23305) {
		    return new Array(len_23305);
  

	
}
var ConstSet4 = setConstr(6);
var ConstSet5 = setConstr(5);
var ConstSet6 = setConstr(6);
var ConstSet7 = setConstr(5);

function addChar(x_24895, c_24896) {
		x_24895.push(c_24896);

	
}
var ConstSet8 = setConstr(4);
var ConstSet9 = setConstr(2);
var ConstSet10 = setConstr(3);
var ConstSet11 = setConstr(1);
var ConstSet12 = setConstr(5);
var ConstSet13 = setConstr(5);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr(0, 125);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr([65, 90]);

function nimMax(a_24021, b_24022) {
		var Tmp1;

	var result_24023 = 0;

	BeforeRet: do {
		if ((b_24022 <= a_24021)) {
		Tmp1 = a_24021;
		}
		else {
		Tmp1 = b_24022;
		}
		
		result_24023 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24023;

}

function nimMin(a_24003, b_24004) {
		var Tmp1;

	var result_24005 = 0;

	BeforeRet: do {
		if ((a_24003 <= b_24004)) {
		Tmp1 = a_24003;
		}
		else {
		Tmp1 = b_24004;
		}
		
		result_24005 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24005;

}
var ConstSet18 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function reprEnum(e_25480, typ_25481) {
	var result_25482 = null;

	var F={procname:"system.reprEnum",prev:framePtr,filename:"reprjs.nim",line:0};
	framePtr = F;
		if (!(is_undefined_25483(typ_25481.node.sons[e_25480]))) {
		F.line = 38;
		result_25482 = nimCopy(null, makeNimstrLit(typ_25481.node.sons[e_25480].name), NTI138);
		}
		else {
			F.line = 40;
			result_25482 = nimCopy(null, (cstrToNimstr((e_25480)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI138);
		}
		
	framePtr = F.prev;

	return result_25482;

}
var ConstSet19 = setConstr(5);
var ConstSet20 = setConstr(4, 0);
var ConstSet21 = setConstr(5);
var ConstSet22 = setConstr(4, 0);
var ConstSet23 = setConstr(4);
var ConstSet24 = setConstr(6);
var ConstSet25 = setConstr(6);
var ConstSet26 = setConstr(5);
var ConstSet27 = setConstr(6);
var ConstSet28 = setConstr(5);
var ConstSet29 = setConstr(4, 0);
var ConstSet30 = setConstr(4, 0);
var ConstSet31 = setConstr(4);
var ConstSet32 = setConstr(4, 0);
var ConstSet33 = setConstr(4, 0);
var ConstSet34 = setConstr(4);
			var to_tag_169689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
			var to_event_name_169695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_170495 = [0];
var object_id_174437 = [0];
var vcomponents_182026 = [{}];
var kxi_189326 = [null];
var env_computed_206407 = [false];
var environment_206409 = [null];

function is_power_of_two_68862(x_68864) {
		var Tmp1;

	var result_68865 = false;

	BeforeRet: do {
		if (!(0 < x_68864)) Tmp1 = false; else {			Tmp1 = ((x_68864 & (x_68864 - 1)) == 0);		}		result_68865 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_68865;

}

function is_fat_pointer_24401(ti_24403) {
	var result_24404 = false;

	BeforeRet: do {
		result_24404 = !((ConstSet1[ti_24403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24404;

}

function nimCopyAux(dest_24432, src_24433, n_24435) {
		switch (n_24435.kind) {
		case 0:
			break;
		case 1:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24435.sons.length; i++) {
      nimCopyAux(dest_24432, src_24433, n_24435.sons[i]);
    }
    
			break;
		case 3:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
      for (var i = 0; i < n_24435.sons.length; ++i) {
        nimCopyAux(dest_24432, src_24433, n_24435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_21151(f_21153) {
					var Tmp3;

	var result_21154 = [null];

		var it_21162 = f_21153;
		var i_21164 = 0;
		var total_21166 = 0;
		var temp_frames_21173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI21156);
		L1: do {
				L2: while (true) {
					if (!!((it_21162 == null))) Tmp3 = false; else {						Tmp3 = (i_21164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_21173[i_21164].Field0 = it_21162.procname;
					temp_frames_21173[i_21164].Field1 = it_21162.line;
					i_21164 += 1;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_21162 == null))) break L5;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		result_21154[0] = nimCopy(null, [], NTI138);
		if (!((total_21166 == i_21164))) {
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("(")); } else { result_21154[0] = makeNimstrLit("("); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr(((total_21166 - i_21164))+"")); } else { result_21154[0] = cstrToNimstr(((total_21166 - i_21164))+"").slice(); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_21154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_21421 = 0;
			var colontmp__257464 = 0;
			colontmp__257464 = (i_21164 - 1);
			var res_257465 = colontmp__257464;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_257465)) break L8;
						j_21421 = res_257465;
						add_18638(result_21154, 0, temp_frames_21173[j_21421].Field0);
						if ((0 < temp_frames_21173[j_21421].Field1)) {
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(", line: ")); } else { result_21154[0] = makeNimstrLit(", line: "); };
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr((temp_frames_21173[j_21421].Field1)+"")); } else { result_21154[0] = cstrToNimstr((temp_frames_21173[j_21421].Field1)+"").slice(); };
						}
						
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("\x0A")); } else { result_21154[0] = makeNimstrLit("\x0A"); };
						res_257465 -= 1;
					}
			} while(false);
		} while(false);

	return result_21154[0];

}

function raw_write_stack_trace_21468() {
	var result_21470 = null;

		if (!((framePtr == null))) {
		result_21470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_21151(framePtr) || []), NTI138);
		}
		else {
			result_21470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_21470;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(raw_write_stack_trace_21468()); } else { buf_21530[0] = raw_write_stack_trace_21468().slice(); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function sys_fatal_14862(message_14866) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_15003 = null;
		F.line = 37;
		e_15003 = {m_type: NTI4050, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_15003.message = nimCopy(null, message_14866, NTI138);
		F.line = 39;
		raiseException(e_15003, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_14858(msg_14860) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_14862(msg_14860);
	framePtr = F.prev;

	
}

function failed_assert_impl_15051(msg_15053) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_14858(msg_15053);
	framePtr = F.prev;

	
}

function raiseRangeError() {
		var e_22441 = null;
		e_22441 = {m_type: NTI4062, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22441.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_22441.parent = null;
		raiseException(e_22441, "RangeError");

	
}

function init_table_257034(initial_size_257038) {
	var result_257054 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_68862(initial_size_257038))) {
		F.line = 118;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_257054.counter = 0;
		F.line = 120;
		result_257054.data = new Array(chckRange(initial_size_257038, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_257038, 0, 2147483647);++i) {result_257054.data[i]={Field0: 0, Field1: null, Field2: {title: null, choices: null}};}	framePtr = F.prev;

	return result_257054;

}
var questions_json_257031 = [null];
var question_screens_257414 = [init_table_257034(64)];
var default_screen_257415 = [{title: null, choices: null}];

function get_var_type_247509(x_247511) {
	var result_247512 = 0;

	var F={procname:"json.getVarType",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 871;
		result_247512 = 0;
		F.line = 874;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_247511)))) {
		case "[object Array]":
			F.line = 875;
			result_247512 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			F.line = 876;
			result_247512 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_247511 % 1.0000000000000000e+00 == 0.0)) {
			F.line = 879;
			result_247512 = 2;
			break BeforeRet;
			}
			else {
				F.line = 881;
				result_247512 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			F.line = 882;
			result_247512 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			F.line = 883;
			result_247512 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			F.line = 884;
			result_247512 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			F.line = 885;
			failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(885, 18) `false` "));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_247512;

}

function new_jarray_229642() {
	var result_229644 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 219;
		result_229644 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};
	framePtr = F.prev;

	return result_229644;

}

function len_247629(x_247631) {
	var result_247632 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_247509(x_247631) == 6))) {
		F.line = 888;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(888, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 889;
		      result_247632 = x_247631.length;
    
	framePtr = F.prev;

	return result_247632;

}

function add_229976(father_229978, child_229979) {
		var Tmp1;
		var Tmp2;

	var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((father_229978.kind == 6))) {
		F.line = 289;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(289, 10) `father.kind == JArray` "));
		}
		
		F.line = 290;
		var Tmp1 = father_229978;
		if (ConstSet2[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_229979); } else { Tmp2 = [child_229979]; };
	framePtr = F.prev;

	
}

function HEX5BHEX5D_248014(x_248016, y_248017) {
	var result_248018 = {};

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_247509(x_248016) == 6))) {
		F.line = 900;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(900, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 901;
		      result_248018 = x_248016[y_248017];
    
	framePtr = F.prev;

	return result_248018;

}

function raiseOverflow() {
		var e_22042 = null;
		e_22042 = {m_type: NTI4046, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22042.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_22042.parent = null;
		raiseException(e_22042, "OverflowError");

	
}

function init_ordered_table_229383(initial_size_229387) {
	var result_229389 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_68862(initial_size_229387))) {
		F.line = 118;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_229389.counter = 0;
		F.line = 120;
		result_229389.data = new Array(chckRange(initial_size_229387, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_229387, 0, 2147483647);++i) {result_229389.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		result_229389.first = -1;
		F.line = 123;
		result_229389.last = -1;
	framePtr = F.prev;

	return result_229389;

}

function new_jobject_229378() {
	var result_229380 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 215;
		result_229380 = {kind: 5, fields: init_ordered_table_229383(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
	framePtr = F.prev;

	return result_229380;

}

function raiseDivByZero() {
		var e_22241 = null;
		e_22241 = {m_type: NTI4044, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22241.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		e_22241.parent = null;
		raiseException(e_22241, "DivByZeroError");

	
}

function raiseIndexError(i_22639, a_22640, b_22641) {
		var Tmp1;

		var e_22802 = null;
		e_22802 = {m_type: NTI4058, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22641 < a_22640)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22639)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22640)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22641)+"") || []);
		}
		
		e_22802.message = nimCopy(null, Tmp1, NTI138);
		e_22802.parent = null;
		raiseException(e_22802, "IndexError");

	
}

function HEX21HEX26_174272(h_174274, val_174275) {
	var result_174276 = 0;

	var F={procname:"hashes.!&",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 63;
		var h_174277 = (h_174274 >>> 0);
		F.line = 64;
		var val_174278 = (val_174275 >>> 0);
		F.line = 65;
		var res_174284 = ((h_174277 + val_174278) >>> 0);
		F.line = 66;
		res_174284 = ((res_174284 + (res_174284 << 10)) >>> 0);
		F.line = 67;
		res_174284 = (res_174284 ^ ((res_174284 >>> 0) >>> 6));
		F.line = 68;
		result_174276 = (res_174284|0);
	framePtr = F.prev;

	return result_174276;

}

function hash_175069(x_175071) {
	var result_175072 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 141;
		result_175072 = x_175071;
	framePtr = F.prev;

	return result_175072;

}

function HEX21HEX24_174322(h_174324) {
	var result_174325 = 0;

	var F={procname:"hashes.!$",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 74;
		var h_174326 = (h_174324 >>> 0);
		F.line = 75;
		var res_174339 = ((h_174326 + (h_174326 << 3)) >>> 0);
		F.line = 76;
		res_174339 = (res_174339 ^ ((res_174339 >>> 0) >>> 11));
		F.line = 77;
		res_174339 = ((res_174339 + (res_174339 << 15)) >>> 0);
		F.line = 78;
		result_174325 = (res_174339|0);
	framePtr = F.prev;

	return result_174325;

}

function hash_175180(x_175182) {
	var result_175183 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 165;
		var element_size_175185 = 1;
		F.line = 166;
		var step_size_175186 = divInt(4, element_size_175185);
		F.line = 167;
		var i_175187 = 0;
		L1: do {
			F.line = 168;
				L2: while (true) {
				if (!(i_175187 <= subInt(addInt((x_175182 != null ? (x_175182.length-1) : -1), 1), step_size_175186))) break L2;
					F.line = 169;
					var n_175188 = 0;
					F.line = 175;
					n_175188 = x_175182[chckIndx(i_175187, 0, x_175182.length+0-1)-0];
					F.line = 176;
					result_175183 = HEX21HEX26_174272(result_175183, n_175188);
					F.line = 177;
					i_175187 = addInt(i_175187, step_size_175186);
				}
		} while(false);
		L3: do {
			F.line = 159;
			var i_175407 = 0;
			F.line = 2679;
			var colontmp__187366 = 0;
			F.line = 189;
			colontmp__187366 = (x_175182 != null ? (x_175182.length-1) : -1);
			F.line = 2689;
			var res_187367 = i_175187;
			L4: do {
				F.line = 2690;
					L5: while (true) {
					if (!(res_187367 <= colontmp__187366)) break L5;
						F.line = 159;
						i_175407 = res_187367;
						F.line = 160;
						result_175183 = HEX21HEX26_174272(result_175183, hash_175069(x_175182[chckIndx(i_175407, 0, x_175182.length+0-1)-0]));
						F.line = 2692;
						res_187367 = addInt(res_187367, 1);
					}
			} while(false);
		} while(false);
		F.line = 161;
		result_175183 = HEX21HEX24_174322(result_175183);
	framePtr = F.prev;

	return result_175183;

}

function is_filled_178418(hcode_178420) {
	var result_178421 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_178421 = !((hcode_178420 == 0));
	framePtr = F.prev;

	return result_178421;

}

function next_try_178435(h_178437, max_hash_178438) {
	var result_178439 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_178439 = (addInt(h_178437, 1) & max_hash_178438);
	framePtr = F.prev;

	return result_178439;

}

function raw_get_230821(t_230826, key_230827, hc_230828, hc_230828_Idx) {
						var Tmp3;

	var result_230829 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_230828[hc_230828_Idx] = hash_175180(key_230827);
		if ((hc_230828[hc_230828_Idx] == 0)) {
		F.line = 56;
		hc_230828[hc_230828_Idx] = 314159265;
		}
		
		if (((t_230826.data != null ? t_230826.data.length : 0) == 0)) {
		F.line = 38;
		result_230829 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_230971 = (hc_230828[hc_230828_Idx] & (t_230826.data != null ? (t_230826.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_230826.data[chckIndx(h_230971, 0, t_230826.data.length+0-1)-0].Field0)) break L2;
						if (!(t_230826.data[chckIndx(h_230971, 0, t_230826.data.length+0-1)-0].Field0 == hc_230828[hc_230828_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_230826.data[chckIndx(h_230971, 0, t_230826.data.length+0-1)-0].Field2, key_230827);						}					if (Tmp3) {
					F.line = 46;
					result_230829 = h_230971;
					break BeforeRet;
					}
					
					F.line = 47;
					h_230971 = next_try_178435(h_230971, (t_230826.data != null ? (t_230826.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_230829 = subInt(-1, h_230971);
	} while (false);
	framePtr = F.prev;

	return result_230829;

}

function must_rehash_178453(length_178455, counter_178456) {
	var result_178457 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_178456 < length_178455))) {
		F.line = 33;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_178457 = ((mulInt(length_178455, 2) < mulInt(counter_178456, 3)) || (subInt(length_178455, counter_178456) < 4));
	framePtr = F.prev;

	return result_178457;

}

function raw_insert_233265(t_233271, data_233274, data_233274_Idx, key_233275, val_233276, hc_233277, h_233278) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_233274[data_233274_Idx][chckIndx(h_233278, 0, data_233274[data_233274_Idx].length+0-1)-0].Field2 = nimCopy(null, key_233275, NTI138);
		F.line = 23;
		data_233274[data_233274_Idx][chckIndx(h_233278, 0, data_233274[data_233274_Idx].length+0-1)-0].Field3 = val_233276;
		F.line = 24;
		data_233274[data_233274_Idx][chckIndx(h_233278, 0, data_233274[data_233274_Idx].length+0-1)-0].Field0 = hc_233277;
		F.line = 1233;
		data_233274[data_233274_Idx][chckIndx(h_233278, 0, data_233274[data_233274_Idx].length+0-1)-0].Field1 = -1;
		if ((t_233271.first < 0)) {
		F.line = 1234;
		t_233271.first = h_233278;
		}
		
		if ((0 <= t_233271.last)) {
		F.line = 1235;
		data_233274[data_233274_Idx][chckIndx(t_233271.last, 0, data_233274[data_233274_Idx].length+0-1)-0].Field1 = h_233278;
		}
		
		F.line = 1236;
		t_233271.last = h_233278;
	framePtr = F.prev;

	
}

function enlarge_232167(t_232173) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1239;
		var n_232181 = null;
		F.line = 1240;
		n_232181 = new Array(chckRange(mulInt((t_232173.data != null ? t_232173.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_232173.data != null ? t_232173.data.length : 0), 2), 0, 2147483647);++i) {n_232181[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1241;
		var h_232320 = t_232173.first;
		F.line = 1242;
		t_232173.first = -1;
		F.line = 1243;
		t_232173.last = -1;
		F.line = 1244;
		var Tmp1 = t_232173.data; t_232173.data = n_232181; n_232181 = Tmp1;		L2: do {
			F.line = 1245;
				L3: while (true) {
				if (!(0 <= h_232320)) break L3;
					F.line = 1246;
					var nxt_232479 = n_232181[chckIndx(h_232320, 0, n_232181.length+0-1)-0].Field1;
					F.line = 1247;
					var eh_232628 = n_232181[chckIndx(h_232320, 0, n_232181.length+0-1)-0].Field0;
					if (is_filled_178418(eh_232628)) {
					F.line = 1249;
					var j_232635 = (eh_232628 & (t_232173.data != null ? (t_232173.data.length-1) : -1));
					L4: do {
						F.line = 1250;
							L5: while (true) {
							if (!is_filled_178418(t_232173.data[chckIndx(j_232635, 0, t_232173.data.length+0-1)-0].Field0)) break L5;
								F.line = 1251;
								j_232635 = next_try_178435(j_232635, (t_232173.data != null ? (t_232173.data.length-1) : -1));
							}
					} while(false);
					F.line = 1252;
					raw_insert_233265(t_232173, t_232173, "data", n_232181[chckIndx(h_232320, 0, n_232181.length+0-1)-0].Field2, n_232181[chckIndx(h_232320, 0, n_232181.length+0-1)-0].Field3, n_232181[chckIndx(h_232320, 0, n_232181.length+0-1)-0].Field0, j_232635);
					}
					
					F.line = 1253;
					h_232320 = nxt_232479;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_234082(t_234087, key_234088, hc_234089) {
	var result_234090 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_234087.data != null ? t_234087.data.length : 0) == 0)) {
		F.line = 38;
		result_234090 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_234229 = (hc_234089 & (t_234087.data != null ? (t_234087.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_234087.data[chckIndx(h_234229, 0, t_234087.data.length+0-1)-0].Field0)) break L2;
					if (((t_234087.data[chckIndx(h_234229, 0, t_234087.data.length+0-1)-0].Field0 == hc_234089) && eqStrings(t_234087.data[chckIndx(h_234229, 0, t_234087.data.length+0-1)-0].Field2, key_234088))) {
					F.line = 46;
					result_234090 = h_234229;
					break BeforeRet;
					}
					
					F.line = 47;
					h_234229 = next_try_178435(h_234229, (t_234087.data != null ? (t_234087.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_234090 = subInt(-1, h_234229);
	} while (false);
	framePtr = F.prev;

	return result_234090;

}

function HEX5BHEX5DHEX3D_230311(t_230317, key_230318, val_230319) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_230317.data != null ? t_230317.data.length : 0) == 0)) {
		if (!(is_power_of_two_68862(64))) {
		F.line = 118;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_230317.counter = 0;
		F.line = 120;
		t_230317.data = new Array(64); for (var i=0;i<64;++i) {t_230317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		t_230317.first = -1;
		F.line = 123;
		t_230317.last = -1;
		}
		
		F.line = 57;
		var hc_230801 = [0];
		F.line = 58;
		var index_231439 = raw_get_230821(t_230317, key_230318, hc_230801, 0);
		if ((0 <= index_231439)) {
		F.line = 59;
		t_230317.data[chckIndx(index_231439, 0, t_230317.data.length+0-1)-0].Field3 = val_230319;
		}
		else {
			if (((t_230317.data != null ? t_230317.data.length : 0) == 0)) {
			if (!(is_power_of_two_68862(64))) {
			F.line = 118;
			failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_230317.counter = 0;
			F.line = 120;
			t_230317.data = new Array(64); for (var i=0;i<64;++i) {t_230317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			F.line = 122;
			t_230317.first = -1;
			F.line = 123;
			t_230317.last = -1;
			}
			
			if (must_rehash_178453((t_230317.data != null ? t_230317.data.length : 0), t_230317.counter)) {
			F.line = 49;
			enlarge_232167(t_230317);
			F.line = 50;
			index_231439 = raw_get_known_hc_234082(t_230317, key_230318, hc_230801[0]);
			}
			
			F.line = 51;
			index_231439 = subInt(-1, index_231439);
			F.line = 52;
			raw_insert_233265(t_230317, t_230317, "data", key_230318, val_230319, hc_230801[0], index_231439);
			F.line = 60;
			t_230317.counter = addInt(t_230317.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_235214(obj_235216, key_235217, val_235218) {
		var Tmp1;

	var F={procname:"json.[]=",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((obj_235216.kind == 5))) {
		F.line = 363;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(363, 9) `obj.kind == JObject` "));
		}
		
		F.line = 364;
		var Tmp1 = obj_235216;
		if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		HEX5BHEX5DHEX3D_230311(Tmp1.fields, key_235217, val_235218);
	framePtr = F.prev;

	
}

function new_jint_229311(n_229313) {
	var result_229314 = null;

	var F={procname:"json.newJInt",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 199;
		result_229314 = {kind: 2, num: n_229313, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_229314;

}

function new_jfloat_229328(n_229330) {
	var result_229331 = null;

	var F={procname:"json.newJFloat",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_229331 = {kind: 3, fnum: n_229330, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_229331;

}

function new_jstring_229261(s_229263) {
	var result_229264 = null;

	var F={procname:"json.newJString",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 191;
		result_229264 = {kind: 4, str: nimCopy(null, s_229263, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_229264;

}

function new_jbool_229345(b_229347) {
	var result_229348 = null;

	var F={procname:"json.newJBool",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 207;
		result_229348 = {kind: 1, bval: b_229347, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_229348;

}

function new_jnull_229362() {
	var result_229364 = null;

	var F={procname:"json.newJNull",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 211;
		result_229364 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_229364;

}

function convert_object_248214(x_248216) {
	var result_248217 = null;

	var F={procname:"json.convertObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 906;
		switch (get_var_type_247509(x_248216)) {
		case 6:
			F.line = 908;
			result_248217 = new_jarray_229642();
			L1: do {
				F.line = 909;
				var i_248225 = 0;
				F.line = 2716;
				var colontmp__265066 = 0;
				F.line = 909;
				colontmp__265066 = len_247629(x_248216);
				F.line = 2717;
				var i_265067 = 0;
				L2: do {
					F.line = 2718;
						L3: while (true) {
						if (!(i_265067 < colontmp__265066)) break L3;
							F.line = 909;
							i_248225 = i_265067;
							F.line = 910;
							add_229976(result_248217, convert_object_248214(HEX5BHEX5D_248014(x_248216, i_248225)));
							F.line = 2720;
							i_265067 = addInt(i_265067, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			F.line = 912;
			result_248217 = new_jobject_229378();
			F.line = 913;
			for (var property in x_248216) {
        if (x_248216.hasOwnProperty(property)) {
      
			F.line = 916;
			var nim_property_248227 = null;
			F.line = 917;
			var nim_value_248228 = {};
			F.line = 918;
			nim_property_248227 = property; nim_value_248228 = x_248216[property];
			F.line = 919;
			HEX5BHEX5DHEX3D_235214(result_248217, cstrToNimstr(nim_property_248227), convert_object_248214(nim_value_248228));
			F.line = 920;
			}}
			break;
		case 2:
			F.line = 922;
			result_248217 = new_jint_229311(x_248216);
			break;
		case 3:
			F.line = 924;
			result_248217 = new_jfloat_229328(x_248216);
			break;
		case 4:
			F.line = 926;
			result_248217 = new_jstring_229261(cstrToNimstr(x_248216));
			break;
		case 1:
			F.line = 928;
			result_248217 = new_jbool_229345(x_248216);
			break;
		case 0:
			F.line = 930;
			result_248217 = new_jnull_229362();
			break;
		}
	framePtr = F.prev;

	return result_248217;

}

function parse_json_248257(buffer_248259) {
	var result_248260 = null;

	var F={procname:"json.parseJson",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 933;
		result_248260 = convert_object_248214(JSON.parse(toJSStr(buffer_248259)));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_248260;

}

function len_236765(t_236770) {
	var result_236771 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1473;
		result_236771 = t_236770.counter;
	framePtr = F.prev;

	return result_236771;

}

function len_239483(n_239485) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_239486 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 473;
		switch (n_239485.kind) {
		case 6:
			F.line = 474;
			var Tmp1 = n_239485;
			if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			result_239486 = ((Tmp2 = Tmp1.elems, Tmp2) != null ? Tmp2.length : 0);
			break;
		case 5:
			F.line = 475;
			var Tmp3 = n_239485;
			if (ConstSet5[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
			result_239486 = len_236765(Tmp3.fields);
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_239486;

}

function nsuToHex(x_160450, len_160451) {
	var result_160452 = null;

	var F={procname:"strutils.toHex",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 945;
		var n_160454 = x_160450;
		F.line = 946;
		result_160452 = nimCopy(null, mnewString(len_160451), NTI138);
		L1: do {
			F.line = 947;
			var j_160461 = 0;
			F.line = 2620;
			var colontmp__265112 = 0;
			F.line = 947;
			colontmp__265112 = subInt(len_160451, 1);
			F.line = 2642;
			var res_265113 = colontmp__265112;
			L2: do {
				F.line = 2643;
					L3: while (true) {
					if (!(0 <= res_265113)) break L3;
						F.line = 947;
						j_160461 = res_265113;
						F.line = 948;
						result_160452[chckIndx(j_160461, 0, result_160452.length+0-1)-0] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_160454 & 15), 0, makeNimstrLit("0123456789ABCDEF").length+0-1)-0];
						F.line = 949;
						n_160454 = (n_160454 >> 4);
						if (((n_160454 == 0) && (x_160450 < 0))) {
						F.line = 951;
						n_160454 = -1;
						}
						
						F.line = 2645;
						res_265113 = subInt(res_265113, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_160452;

}

function escape_json_unquoted_244521(s_244523, result_244525, result_244525_Idx) {
	var F={procname:"json.escapeJsonUnquoted",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 606;
			var c_244527 = 0;
			F.line = 203;
			var i_265108 = 0;
			F.line = 204;
			var l_265109 = (s_244523 != null ? s_244523.length : 0);
			L2: do {
				F.line = 205;
					L3: while (true) {
					if (!(i_265108 < l_265109)) break L3;
						F.line = 606;
						c_244527 = s_244523[chckIndx(i_265108, 0, s_244523.length+0-1)-0];
						F.line = 607;
						switch (c_244527) {
						case 10:
							F.line = 608;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\n")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\n"); };
							break;
						case 8:
							F.line = 609;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\b")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\b"); };
							break;
						case 12:
							F.line = 610;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\f")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\f"); };
							break;
						case 9:
							F.line = 611;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\t")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\t"); };
							break;
						case 11:
							F.line = 612;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\v")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\v"); };
							break;
						case 13:
							F.line = 613;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\r")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\r"); };
							break;
						case 34:
							F.line = 614;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\\"")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\\""); };
							break;
						case 0:
						case 1:
						case 2:
						case 3:
						case 4:
						case 5:
						case 6:
						case 7:
							F.line = 615;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat((makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_244527)+"") || [])); } else { result_244525[result_244525_Idx] = (makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_244527)+"") || []).slice(); };
							break;
						case 14:
						case 15:
						case 16:
						case 17:
						case 18:
						case 19:
						case 20:
						case 21:
						case 22:
						case 23:
						case 24:
						case 25:
						case 26:
						case 27:
						case 28:
						case 29:
						case 30:
						case 31:
							F.line = 616;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat((makeNimstrLit("\\u00") || []).concat(nsuToHex(c_244527, 2) || [])); } else { result_244525[result_244525_Idx] = (makeNimstrLit("\\u00") || []).concat(nsuToHex(c_244527, 2) || []).slice(); };
							break;
						case 92:
							F.line = 617;
							if (result_244525[result_244525_Idx] != null) { result_244525[result_244525_Idx] = (result_244525[result_244525_Idx]).concat(makeNimstrLit("\\\\")); } else { result_244525[result_244525_Idx] = makeNimstrLit("\\\\"); };
							break;
						default: 
							F.line = 618;
							if (result_244525[result_244525_Idx] != null) { addChar(result_244525[result_244525_Idx], c_244527); } else { result_244525[result_244525_Idx] = [c_244527]; };
							break;
						}
						F.line = 207;
						i_265108 = addInt(i_265108, 1);
						if (!(((s_244523 != null ? s_244523.length : 0) == l_265109))) {
						F.line = 208;
						failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(208, 11) `len(a) == L` the length of the string changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function escape_json_244574(s_244576, result_244578, result_244578_Idx) {
	var F={procname:"json.escapeJson",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 628;
		if (result_244578[result_244578_Idx] != null) { result_244578[result_244578_Idx] = (result_244578[result_244578_Idx]).concat(makeNimstrLit("\"")); } else { result_244578[result_244578_Idx] = makeNimstrLit("\""); };
		F.line = 629;
		escape_json_unquoted_244521(s_244576, result_244578, result_244578_Idx);
		F.line = 630;
		if (result_244578[result_244578_Idx] != null) { result_244578[result_244578_Idx] = (result_244578[result_244578_Idx]).concat(makeNimstrLit("\"")); } else { result_244578[result_244578_Idx] = makeNimstrLit("\""); };
	framePtr = F.prev;

	
}

function to_ugly_245060(result_245063, result_245063_Idx, node_245064) {
				var Tmp2;
				var Tmp6;
			var Tmp9;
			var Tmp10;
			var Tmp11;
			var Tmp12;
				var Tmp13;

	var F={procname:"json.toUgly",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 727;
		var comma_245065 = false;
		F.line = 728;
		switch (node_245064.kind) {
		case 6:
			F.line = 730;
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit("[")); } else { result_245063[result_245063_Idx] = makeNimstrLit("["); };
			L1: do {
				F.line = 731;
				var child_245073 = null;
				F.line = 183;
				var colontmp__265095 = null;
				F.line = 731;
				var Tmp2 = node_245064;
				if (ConstSet6[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
				colontmp__265095 = Tmp2.elems;
				F.line = 185;
				var i_265097 = 0;
				F.line = 186;
				var l_265098 = (colontmp__265095 != null ? colontmp__265095.length : 0);
				L3: do {
					F.line = 187;
						L4: while (true) {
						if (!(i_265097 < l_265098)) break L4;
							F.line = 731;
							child_245073 = colontmp__265095[chckIndx(i_265097, 0, colontmp__265095.length+0-1)-0];
							if (comma_245065) {
							F.line = 732;
							if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit(",")); } else { result_245063[result_245063_Idx] = makeNimstrLit(","); };
							}
							else {
								F.line = 733;
								comma_245065 = true;
							}
							
							F.line = 734;
							to_ugly_245060(result_245063, result_245063_Idx, child_245073);
							F.line = 189;
							i_265097 = addInt(i_265097, 1);
							if (!(((colontmp__265095 != null ? colontmp__265095.length : 0) == l_265098))) {
							F.line = 190;
							failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			F.line = 735;
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit("]")); } else { result_245063[result_245063_Idx] = makeNimstrLit("]"); };
			break;
		case 5:
			F.line = 737;
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit("{")); } else { result_245063[result_245063_Idx] = makeNimstrLit("{"); };
			L5: do {
				F.line = 738;
				var key_245082 = null;
				F.line = 738;
				var value_245083 = null;
				F.line = 1619;
				var colontmp__265101 = {data: null, counter: 0, first: 0, last: 0};
				F.line = 738;
				var Tmp6 = node_245064;
				if (ConstSet7[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
				nimCopy(colontmp__265101, Tmp6.fields, NTI229228);
				F.line = 1645;
				var l_265102 = len_236765(colontmp__265101);
				if ((0 < colontmp__265101.counter)) {
				F.line = 1257;
				var h_265103 = colontmp__265101.first;
				L7: do {
					F.line = 1258;
						L8: while (true) {
						if (!(0 <= h_265103)) break L8;
							F.line = 1259;
							var nxt_265105 = colontmp__265101.data[chckIndx(h_265103, 0, colontmp__265101.data.length+0-1)-0].Field1;
							if (is_filled_178418(colontmp__265101.data[chckIndx(h_265103, 0, colontmp__265101.data.length+0-1)-0].Field0)) {
							F.line = 738;
							key_245082 = colontmp__265101.data[chckIndx(h_265103, 0, colontmp__265101.data.length+0-1)-0].Field2;
							F.line = 1647;
							value_245083 = colontmp__265101.data[chckIndx(h_265103, 0, colontmp__265101.data.length+0-1)-0].Field3;
							if (comma_245065) {
							F.line = 739;
							if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit(",")); } else { result_245063[result_245063_Idx] = makeNimstrLit(","); };
							}
							else {
								F.line = 740;
								comma_245065 = true;
							}
							
							F.line = 741;
							escape_json_244574(key_245082, result_245063, result_245063_Idx);
							F.line = 742;
							if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit(":")); } else { result_245063[result_245063_Idx] = makeNimstrLit(":"); };
							F.line = 743;
							to_ugly_245060(result_245063, result_245063_Idx, value_245083);
							if (!((len_236765(colontmp__265101) == l_265102))) {
							F.line = 1648;
							failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							F.line = 1262;
							h_265103 = nxt_265105;
						}
				} while(false);
				}
				
			} while(false);
			F.line = 744;
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit("}")); } else { result_245063[result_245063_Idx] = makeNimstrLit("}"); };
			break;
		case 4:
			F.line = 746;
			var Tmp9 = node_245064;
			if (ConstSet8[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
			escape_json_244574(Tmp9.str, result_245063, result_245063_Idx);
			break;
		case 2:
			F.line = 748;
			var Tmp10 = node_245064;
			if (ConstSet9[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("num")); }
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(cstrToNimstr((Tmp10.num)+"")); } else { result_245063[result_245063_Idx] = cstrToNimstr((Tmp10.num)+"").slice(); };
			break;
		case 3:
			F.line = 751;
			var Tmp11 = node_245064;
			if (ConstSet10[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("fnum")); }
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(cstrToNimstr((Tmp11.fnum)+"")); } else { result_245063[result_245063_Idx] = cstrToNimstr((Tmp11.fnum)+"").slice(); };
			break;
		case 1:
			F.line = 754;
				var Tmp13 = node_245064;
				if (ConstSet11[Tmp13.kind]===undefined) { raiseFieldError(makeNimstrLit("bval")); }
			if (Tmp13.bval) {
			Tmp12 = makeNimstrLit("true");
			}
			else {
			Tmp12 = makeNimstrLit("false");
			}
			
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(Tmp12); } else { result_245063[result_245063_Idx] = Tmp12.slice(); };
			break;
		case 0:
			F.line = 756;
			if (result_245063[result_245063_Idx] != null) { result_245063[result_245063_Idx] = (result_245063[result_245063_Idx]).concat(makeNimstrLit("null")); } else { result_245063[result_245063_Idx] = makeNimstrLit("null"); };
			break;
		}
	framePtr = F.prev;

	
}

function HEX24_245416(node_245418) {
	var result_245419 = [null];

	var F={procname:"json.$",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 760;
		result_245419[0] = nimCopy(null, mnewString(0), NTI138);
		F.line = 761;
		to_ugly_245060(result_245419, 0, node_245418);
	framePtr = F.prev;

	return result_245419[0];

}

function hash_175430(x_175432) {
	var result_175433 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 165;
		var element_size_175434 = 1;
		F.line = 166;
		var step_size_175435 = divInt(4, element_size_175434);
		F.line = 167;
		var i_175436 = 0;
		L1: do {
			F.line = 168;
				L2: while (true) {
				if (!(i_175436 <= subInt(addInt((x_175432 != null ? (x_175432.length-1) : -1), 1), step_size_175435))) break L2;
					F.line = 169;
					var n_175437 = 0;
					F.line = 175;
					n_175437 = x_175432[chckIndx(i_175436, 0, x_175432.length+0-1)-0];
					F.line = 176;
					result_175433 = HEX21HEX26_174272(result_175433, n_175437);
					F.line = 177;
					i_175436 = addInt(i_175436, step_size_175435);
				}
		} while(false);
		L3: do {
			F.line = 159;
			var i_175607 = 0;
			F.line = 2679;
			var colontmp__265129 = 0;
			F.line = 198;
			colontmp__265129 = (x_175432 != null ? (x_175432.length-1) : -1);
			F.line = 2689;
			var res_265130 = i_175436;
			L4: do {
				F.line = 2690;
					L5: while (true) {
					if (!(res_265130 <= colontmp__265129)) break L5;
						F.line = 159;
						i_175607 = res_265130;
						F.line = 160;
						result_175433 = HEX21HEX26_174272(result_175433, hash_175069(x_175432.charCodeAt(chckIndx(i_175607, 0, x_175432.length+0-1)-0)));
						F.line = 2692;
						res_265130 = addInt(res_265130, 1);
					}
			} while(false);
		} while(false);
		F.line = 161;
		result_175433 = HEX21HEX24_174322(result_175433);
	framePtr = F.prev;

	return result_175433;

}

function raw_get_260002(t_260006, key_260007, hc_260008, hc_260008_Idx) {
						var Tmp3;

	var result_260009 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_260008[hc_260008_Idx] = hash_175430(key_260007);
		if ((hc_260008[hc_260008_Idx] == 0)) {
		F.line = 56;
		hc_260008[hc_260008_Idx] = 314159265;
		}
		
		if (((t_260006.data != null ? t_260006.data.length : 0) == 0)) {
		F.line = 38;
		result_260009 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_260149 = (hc_260008[hc_260008_Idx] & (t_260006.data != null ? (t_260006.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_260006.data[chckIndx(h_260149, 0, t_260006.data.length+0-1)-0].Field0)) break L2;
						if (!(t_260006.data[chckIndx(h_260149, 0, t_260006.data.length+0-1)-0].Field0 == hc_260008[hc_260008_Idx])) Tmp3 = false; else {							Tmp3 = (t_260006.data[chckIndx(h_260149, 0, t_260006.data.length+0-1)-0].Field1 == key_260007);						}					if (Tmp3) {
					F.line = 46;
					result_260009 = h_260149;
					break BeforeRet;
					}
					
					F.line = 47;
					h_260149 = next_try_178435(h_260149, (t_260006.data != null ? (t_260006.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_260009 = subInt(-1, h_260149);
	} while (false);
	framePtr = F.prev;

	return result_260009;

}

function raw_insert_262308(t_262314, data_262317, data_262317_Idx, key_262318, val_262319, hc_262320, h_262321) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_262317[data_262317_Idx][chckIndx(h_262321, 0, data_262317[data_262317_Idx].length+0-1)-0].Field1 = key_262318;
		F.line = 23;
		nimCopy(data_262317[data_262317_Idx][chckIndx(h_262321, 0, data_262317[data_262317_Idx].length+0-1)-0].Field2, val_262319, NTI257015);
		F.line = 24;
		data_262317[data_262317_Idx][chckIndx(h_262321, 0, data_262317[data_262317_Idx].length+0-1)-0].Field0 = hc_262320;
	framePtr = F.prev;

	
}

function enlarge_261348(t_261354) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 268;
		var n_261362 = null;
		F.line = 269;
		n_261362 = new Array(chckRange(mulInt((t_261354.data != null ? t_261354.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_261354.data != null ? t_261354.data.length : 0), 2), 0, 2147483647);++i) {n_261362[i]={Field0: 0, Field1: null, Field2: {title: null, choices: null}};}		F.line = 270;
		var Tmp1 = t_261354.data; t_261354.data = n_261362; n_261362 = Tmp1;		L2: do {
			F.line = 271;
			var i_261521 = 0;
			F.line = 2653;
			var colontmp__265137 = 0;
			F.line = 271;
			colontmp__265137 = (n_261362 != null ? (n_261362.length-1) : -1);
			F.line = 2669;
			var res_265138 = 0;
			L3: do {
				F.line = 2670;
					L4: while (true) {
					if (!(res_265138 <= colontmp__265137)) break L4;
						F.line = 271;
						i_261521 = res_265138;
						F.line = 272;
						var eh_261670 = n_261362[chckIndx(i_261521, 0, n_261362.length+0-1)-0].Field0;
						if (is_filled_178418(eh_261670)) {
						F.line = 274;
						var j_261677 = (eh_261670 & (t_261354.data != null ? (t_261354.data.length-1) : -1));
						L5: do {
							F.line = 275;
								L6: while (true) {
								if (!is_filled_178418(t_261354.data[chckIndx(j_261677, 0, t_261354.data.length+0-1)-0].Field0)) break L6;
									F.line = 276;
									j_261677 = next_try_178435(j_261677, (t_261354.data != null ? (t_261354.data.length-1) : -1));
								}
						} while(false);
						F.line = 278;
						raw_insert_262308(t_261354, t_261354, "data", n_261362[chckIndx(i_261521, 0, n_261362.length+0-1)-0].Field1, n_261362[chckIndx(i_261521, 0, n_261362.length+0-1)-0].Field2, eh_261670, j_261677);
						}
						
						F.line = 2672;
						res_265138 = addInt(res_265138, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_262808(t_262812, key_262813, hc_262814) {
	var result_262815 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_262812.data != null ? t_262812.data.length : 0) == 0)) {
		F.line = 38;
		result_262815 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_262954 = (hc_262814 & (t_262812.data != null ? (t_262812.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_262812.data[chckIndx(h_262954, 0, t_262812.data.length+0-1)-0].Field0)) break L2;
					if (((t_262812.data[chckIndx(h_262954, 0, t_262812.data.length+0-1)-0].Field0 == hc_262814) && (t_262812.data[chckIndx(h_262954, 0, t_262812.data.length+0-1)-0].Field1 == key_262813))) {
					F.line = 46;
					result_262815 = h_262954;
					break BeforeRet;
					}
					
					F.line = 47;
					h_262954 = next_try_178435(h_262954, (t_262812.data != null ? (t_262812.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_262815 = subInt(-1, h_262954);
	} while (false);
	framePtr = F.prev;

	return result_262815;

}

function HEX5BHEX5DHEX3D_259463(t_259469, key_259470, val_259471) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_259469.data != null ? t_259469.data.length : 0) == 0)) {
		if (!(is_power_of_two_68862(64))) {
		F.line = 118;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_259469.counter = 0;
		F.line = 120;
		t_259469.data = new Array(64); for (var i=0;i<64;++i) {t_259469.data[i]={Field0: 0, Field1: null, Field2: {title: null, choices: null}};}		}
		
		F.line = 57;
		var hc_260001 = [0];
		F.line = 58;
		var index_260615 = raw_get_260002(t_259469, key_259470, hc_260001, 0);
		if ((0 <= index_260615)) {
		F.line = 59;
		nimCopy(t_259469.data[chckIndx(index_260615, 0, t_259469.data.length+0-1)-0].Field2, val_259471, NTI257015);
		}
		else {
			if (((t_259469.data != null ? t_259469.data.length : 0) == 0)) {
			if (!(is_power_of_two_68862(64))) {
			F.line = 118;
			failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_259469.counter = 0;
			F.line = 120;
			t_259469.data = new Array(64); for (var i=0;i<64;++i) {t_259469.data[i]={Field0: 0, Field1: null, Field2: {title: null, choices: null}};}			}
			
			if (must_rehash_178453((t_259469.data != null ? t_259469.data.length : 0), t_259469.counter)) {
			F.line = 49;
			enlarge_261348(t_259469);
			F.line = 50;
			index_260615 = raw_get_known_hc_262808(t_259469, key_259470, hc_260001[0]);
			}
			
			F.line = 51;
			index_260615 = subInt(-1, index_260615);
			F.line = 52;
			raw_insert_262308(t_259469, t_259469, "data", key_259470, val_259471, hc_260001[0], index_260615);
			F.line = 60;
			t_259469.counter = addInt(t_259469.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function invalid_format_string_167339() {
	var F={procname:"strutils.invalidFormatString",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_167343 = null;
		F.line = 3439;
		e_167343 = {m_type: NTI4052, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2623;
		e_167343.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI138);
		F.line = 3432;
		e_167343.parent = null;
		F.line = 2623;
		raiseException(e_167343, "ValueError");
	framePtr = F.prev;

	
}

function nsuToLowerAsciiChar(c_158780) {
	var result_158781 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet17[c_158780] != undefined)) {
		F.line = 222;
		result_158781 = chckRange(addInt(c_158780, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_158781 = c_158780;
		}
		
	framePtr = F.prev;

	return result_158781;

}

function nsuCmpIgnoreStyle(a_159047, b_159048) {
					var Tmp7;
					var Tmp8;

	var result_159049 = 0;

	BeforeRet: do {
		var i_159051 = 0;
		var j_159053 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_159051 < (a_159047 != null ? a_159047.length : 0)) && (a_159047[i_159051] == 95))) break L4;
								i_159051 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_159053 < (b_159048 != null ? b_159048.length : 0)) && (b_159048[j_159053] == 95))) break L6;
								j_159053 += 1;
							}
					} while(false);
					if ((i_159051 < (a_159047 != null ? a_159047.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_159047[i_159051]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_159066 = Tmp7;
					if ((j_159053 < (b_159048 != null ? b_159048.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_159048[j_159053]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_159067 = Tmp8;
					result_159049 = (aa_159066 - bb_159067);
					if (!((result_159049 == 0))) {
					break BeforeRet;
					}
					
					if (((a_159047 != null ? a_159047.length : 0) <= i_159051)) {
					if (((b_159048 != null ? b_159048.length : 0) <= j_159053)) {
					result_159049 = 0;
					break BeforeRet;
					}
					
					result_159049 = -1;
					break BeforeRet;
					}
					else {
					if (((b_159048 != null ? b_159048.length : 0) <= j_159053)) {
					result_159049 = 1;
					break BeforeRet;
					}
					}
					i_159051 += 1;
					j_159053 += 1;
				}
		} while(false);
	} while (false);

	return result_159049;

}

function find_normalized_167306(x_167308, in_array_167310) {
	var result_167311 = 0;

	var F={procname:"strutils.findNormalized",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2615;
		var i_167313 = 0;
		L1: do {
			F.line = 2616;
				L2: while (true) {
				if (!(i_167313 < (in_array_167310 != null ? (in_array_167310.length-1) : -1))) break L2;
					if ((nsuCmpIgnoreStyle(x_167308, in_array_167310[chckIndx(i_167313, 0, in_array_167310.length+0-1)-0]) == 0)) {
					F.line = 2617;
					result_167311 = i_167313;
					break BeforeRet;
					}
					
					F.line = 2618;
					i_167313 = addInt(i_167313, 2);
				}
		} while(false);
		F.line = 2620;
		result_167311 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_167311;

}

function substr_29822(s_29824, first_29825, last_29826) {
	var result_29827 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4474;
		var first_29828 = nimMax(first_29825, 0);
		F.line = 4475;
		var l_29830 = nimMax(addInt(subInt(nimMin(last_29826, (s_29824 != null ? (s_29824.length-1) : -1)), first_29828), 1), 0);
		F.line = 4476;
		result_29827 = nimCopy(null, mnewString(chckRange(l_29830, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 4477;
			var i_29839 = 0;
			F.line = 2679;
			var colontmp__169678 = 0;
			F.line = 4477;
			colontmp__169678 = subInt(l_29830, 1);
			F.line = 2689;
			var res_169679 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_169679 <= colontmp__169678)) break L3;
						F.line = 4477;
						i_29839 = res_169679;
						F.line = 4478;
						result_29827[chckIndx(i_29839, 0, result_29827.length+0-1)-0] = s_29824[chckIndx(addInt(i_29839, first_29828), 0, s_29824.length+0-1)-0];
						F.line = 2692;
						res_169679 = addInt(res_169679, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_29827;

}

function nsuAddf(s_167425, s_167425_Idx, formatstr_167426, a_167428) {
									var Tmp5;
						var Tmp6;
							var Tmp7;
						var Tmp10;
							var Tmp11;
								var Tmp12;
									var Tmp15;
							var Tmp16;

	var F={procname:"strutils.addf",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2629;
		var i_167432 = 0;
		F.line = 2630;
		var num_167434 = 0;
		L1: do {
			F.line = 2631;
				L2: while (true) {
				if (!(i_167432 < (formatstr_167426 != null ? formatstr_167426.length : 0))) break L2;
					if (((formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0] == 36) && (addInt(i_167432, 1) < (formatstr_167426 != null ? formatstr_167426.length : 0)))) {
					F.line = 2633;
					switch (formatstr_167426[chckIndx(addInt(i_167432, 1), 0, formatstr_167426.length+0-1)-0]) {
					case 35:
						if (((a_167428 != null ? (a_167428.length-1) : -1) < num_167434)) {
						F.line = 2635;
						invalid_format_string_167339();
						}
						
						F.line = 2636;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(num_167434, 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(num_167434, 0, a_167428.length+0-1)-0].slice(); };
						F.line = 2637;
						i_167432 = addInt(i_167432, 2);
						F.line = 2638;
						num_167434 = addInt(num_167434, 1);
						break;
					case 36:
						F.line = 2640;
						if (s_167425[s_167425_Idx] != null) { addChar(s_167425[s_167425_Idx], 36); } else { s_167425[s_167425_Idx] = [36]; };
						F.line = 2641;
						i_167432 = addInt(i_167432, 2);
						break;
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
					case 57:
					case 45:
						F.line = 2643;
						var j_167459 = 0;
						F.line = 2644;
						i_167432 = addInt(i_167432, 1);
						F.line = 2645;
						var negative_167466 = (formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0] == 45);
						if (negative_167466) {
						F.line = 2646;
						i_167432 = addInt(i_167432, 1);
						}
						
						L3: do {
							F.line = 2647;
								L4: while (true) {
									if (!(i_167432 < (formatstr_167426 != null ? formatstr_167426.length : 0))) Tmp5 = false; else {										Tmp5 = (ConstSet14[formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]] != undefined);									}								if (!Tmp5) break L4;
									F.line = 2648;
									j_167459 = subInt(addInt(mulInt(j_167459, 10), formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]), 48);
									F.line = 2649;
									i_167432 = addInt(i_167432, 1);
								}
						} while(false);
						F.line = 2650;
						if (!(negative_167466)) {
						Tmp6 = subInt(j_167459, 1);
						}
						else {
						Tmp6 = subInt((a_167428 != null ? a_167428.length : 0), j_167459);
						}
						
						var idx_167497 = Tmp6;
							if ((idx_167497 < 0)) Tmp7 = true; else {								Tmp7 = ((a_167428 != null ? (a_167428.length-1) : -1) < idx_167497);							}						if (Tmp7) {
						F.line = 2651;
						invalid_format_string_167339();
						}
						
						F.line = 2652;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(idx_167497, 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(idx_167497, 0, a_167428.length+0-1)-0].slice(); };
						break;
					case 123:
						F.line = 2654;
						var j_167503 = addInt(i_167432, 2);
						F.line = 2655;
						var k_167505 = 0;
						F.line = 2656;
						var negative_167506 = (formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0] == 45);
						if (negative_167506) {
						F.line = 2657;
						j_167503 = addInt(j_167503, 1);
						}
						
						F.line = 2658;
						var is_number_167514 = 0;
						L8: do {
							F.line = 2659;
								L9: while (true) {
								if (!((j_167503 < (formatstr_167426 != null ? formatstr_167426.length : 0)) && !((ConstSet15[formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0]] != undefined)))) break L9;
									if ((ConstSet16[formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0]] != undefined)) {
									F.line = 2661;
									k_167505 = subInt(addInt(mulInt(k_167505, 10), formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0]), 48);
									if ((is_number_167514 == 0)) {
									F.line = 2662;
									is_number_167514 = 1;
									}
									
									}
									else {
										F.line = 2664;
										is_number_167514 = -1;
									}
									
									F.line = 2665;
									j_167503 = addInt(j_167503, 1);
								}
						} while(false);
						if ((is_number_167514 == 1)) {
						F.line = 2667;
						if (!(negative_167506)) {
						Tmp10 = subInt(k_167505, 1);
						}
						else {
						Tmp10 = subInt((a_167428 != null ? a_167428.length : 0), k_167505);
						}
						
						var idx_167547 = Tmp10;
							if ((idx_167547 < 0)) Tmp11 = true; else {								Tmp11 = ((a_167428 != null ? (a_167428.length-1) : -1) < idx_167547);							}						if (Tmp11) {
						F.line = 2668;
						invalid_format_string_167339();
						}
						
						F.line = 2669;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(idx_167547, 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(idx_167547, 0, a_167428.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2671;
							var x_167553 = find_normalized_167306(substr_29822(formatstr_167426, addInt(i_167432, 2), subInt(j_167503, 1)), a_167428);
								if (!(0 <= x_167553)) Tmp12 = false; else {									Tmp12 = (x_167553 < (a_167428 != null ? (a_167428.length-1) : -1));								}							if (Tmp12) {
							F.line = 2672;
							if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(addInt(x_167553, 1), 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(addInt(x_167553, 1), 0, a_167428.length+0-1)-0].slice(); };
							}
							else {
								F.line = 2673;
							invalid_format_string_167339();
							}
							
						}
						
						F.line = 2674;
						i_167432 = addInt(j_167503, 1);
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
					case 119:
					case 120:
					case 121:
					case 122:
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
					case 89:
					case 90:
					case 128:
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
					case 209:
					case 210:
					case 211:
					case 212:
					case 213:
					case 214:
					case 215:
					case 216:
					case 217:
					case 218:
					case 219:
					case 220:
					case 221:
					case 222:
					case 223:
					case 224:
					case 225:
					case 226:
					case 227:
					case 228:
					case 229:
					case 230:
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
					case 236:
					case 237:
					case 238:
					case 239:
					case 240:
					case 241:
					case 242:
					case 243:
					case 244:
					case 245:
					case 246:
					case 247:
					case 248:
					case 249:
					case 250:
					case 251:
					case 252:
					case 253:
					case 254:
					case 255:
					case 95:
						F.line = 2676;
						var j_167560 = addInt(i_167432, 1);
						L13: do {
							F.line = 2677;
								L14: while (true) {
									if (!(j_167560 < (formatstr_167426 != null ? formatstr_167426.length : 0))) Tmp15 = false; else {										Tmp15 = (ConstSet18[formatstr_167426[chckIndx(j_167560, 0, formatstr_167426.length+0-1)-0]] != undefined);									}								if (!Tmp15) break L14;
									F.line = 2677;
									j_167560 = addInt(j_167560, 1);
								}
						} while(false);
						F.line = 2678;
						var x_167573 = find_normalized_167306(substr_29822(formatstr_167426, addInt(i_167432, 1), subInt(j_167560, 1)), a_167428);
							if (!(0 <= x_167573)) Tmp16 = false; else {								Tmp16 = (x_167573 < (a_167428 != null ? (a_167428.length-1) : -1));							}						if (Tmp16) {
						F.line = 2679;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(addInt(x_167573, 1), 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(addInt(x_167573, 1), 0, a_167428.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2680;
						invalid_format_string_167339();
						}
						
						F.line = 2681;
						i_167432 = j_167560;
						break;
					default: 
						F.line = 2683;
						invalid_format_string_167339();
						break;
					}
					}
					else {
						F.line = 2685;
						if (s_167425[s_167425_Idx] != null) { addChar(s_167425[s_167425_Idx], formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]); } else { s_167425[s_167425_Idx] = [formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]]; };
						F.line = 2686;
						i_167432 = addInt(i_167432, 1);
					}
					
				}
		} while(false);
	framePtr = F.prev;

	
}

function nsuFormatOpenArray(formatstr_167601, a_167603) {
	var result_167604 = [null];

	var F={procname:"strutils.%",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2733;
		result_167604[0] = nimCopy(null, mnewString(0), NTI138);
		F.line = 2734;
		nsuAddf(result_167604, 0, formatstr_167601, a_167603);
	framePtr = F.prev;

	return result_167604[0];

}

function is_undefined_25483(x_25486) {
	var result_25487 = false;

	var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"reprjs.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_25487 = x_25486 === undefined;
	framePtr = F.prev;

	return result_25487;

}

function add_quoted_258001(s_258004, s_258004_Idx, x_258005) {
	var F={procname:"addQuoted.addQuoted",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4301;
		if (s_258004[s_258004_Idx] != null) { s_258004[s_258004_Idx] = (s_258004[s_258004_Idx]).concat(reprEnum(x_258005, NTI229202)); } else { s_258004[s_258004_Idx] = reprEnum(x_258005, NTI229202).slice(); };
	framePtr = F.prev;

	
}

function collection_to_string_257769(x_257772, prefix_257773, separator_257774, suffix_257775) {
	var result_257776 = [null];

	var F={procname:"collectionToString.collectionToString",prev:framePtr,filename:"dollars.nim",line:0};
	framePtr = F;
		F.line = 102;
		result_257776[0] = nimCopy(null, prefix_257773, NTI138);
		F.line = 103;
		var first_element_257777 = true;
		L1: do {
			F.line = 104;
			var value_257823 = 0;
			F.line = 37;
			var i_265155 = 0;
			L2: do {
				F.line = 38;
					L3: while (true) {
					if (!(i_265155 <= 6)) break L3;
						if ((x_257772[i_265155] != undefined)) {
						F.line = 104;
						value_257823 = i_265155;
						if (first_element_257777) {
						F.line = 106;
						first_element_257777 = false;
						}
						else {
							F.line = 108;
						if (result_257776[0] != null) { result_257776[0] = (result_257776[0]).concat(separator_257774); } else { result_257776[0] = separator_257774.slice(); };
						}
						
						F.line = 117;
						add_quoted_258001(result_257776, 0, value_257823);
						}
						
						F.line = 40;
						i_265155 += 1;
					}
			} while(false);
		} while(false);
		F.line = 118;
		if (result_257776[0] != null) { result_257776[0] = (result_257776[0]).concat(suffix_257775); } else { result_257776[0] = suffix_257775.slice(); };
	framePtr = F.prev;

	return result_257776[0];

}

function HEX24_257763(x_257767) {
	var result_257768 = null;

	var F={procname:"$.$",prev:framePtr,filename:"dollars.nim",line:0};
	framePtr = F;
		F.line = 121;
		result_257768 = nimCopy(null, collection_to_string_257769(x_257767, makeNimstrLit("{"), makeNimstrLit(", "), makeNimstrLit("}")), NTI138);
	framePtr = F.prev;

	return result_257768;

}

function raw_get_238134(t_238138, key_238139, hc_238140, hc_238140_Idx) {
						var Tmp3;

	var result_238141 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_238140[hc_238140_Idx] = hash_175180(key_238139);
		if ((hc_238140[hc_238140_Idx] == 0)) {
		F.line = 56;
		hc_238140[hc_238140_Idx] = 314159265;
		}
		
		if (((t_238138.data != null ? t_238138.data.length : 0) == 0)) {
		F.line = 38;
		result_238141 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_238283 = (hc_238140[hc_238140_Idx] & (t_238138.data != null ? (t_238138.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_238138.data[chckIndx(h_238283, 0, t_238138.data.length+0-1)-0].Field0)) break L2;
						if (!(t_238138.data[chckIndx(h_238283, 0, t_238138.data.length+0-1)-0].Field0 == hc_238140[hc_238140_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_238138.data[chckIndx(h_238283, 0, t_238138.data.length+0-1)-0].Field2, key_238139);						}					if (Tmp3) {
					F.line = 46;
					result_238141 = h_238283;
					break BeforeRet;
					}
					
					F.line = 47;
					h_238283 = next_try_178435(h_238283, (t_238138.data != null ? (t_238138.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_238141 = subInt(-1, h_238283);
	} while (false);
	framePtr = F.prev;

	return result_238141;

}

function HEX5BHEX5D_238122(t_238128, key_238129) {
	var result_238131 = null;
	var result_238131_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 258;
		var hc_238132 = [0];
		F.line = 259;
		var index_238133 = raw_get_238134(t_238128, key_238129, hc_238132, 0);
		if ((0 <= index_238133)) {
		F.line = 260;
		result_238131 = t_238128.data[chckIndx(index_238133, 0, t_238128.data.length+0-1)-0]; result_238131_Idx = "Field3";
		}
		else {
			F.line = 3436;
			var e_239003 = null;
			F.line = 3439;
			e_239003 = {m_type: NTI4054, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 263;
			e_239003.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_238129 || []), NTI138);
			F.line = 3432;
			e_239003.parent = null;
			F.line = 263;
			raiseException(e_239003, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_238131, result_238131_Idx];

}

function HEX5BHEX5D_239639(node_239641, name_239642) {
		var Tmp1;
		var Tmp2;

	var result_239643 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!(!((node_239641 == null)))) {
		F.line = 485;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(485, 9) `not isNil(node)` "));
		}
		
		if (!((node_239641.kind == 5))) {
		F.line = 486;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(486, 9) `node.kind == JObject` "));
		}
		
		F.line = 489;
		var Tmp1 = node_239641;
		if (ConstSet21[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		result_239643 = (Tmp2 = HEX5BHEX5D_238122(Tmp1.fields, name_239642), Tmp2)[0][Tmp2[1]];
	framePtr = F.prev;

	return result_239643;

}

function HEX5BHEX5D_240369(node_240371, index_240372) {
		var Tmp1;
		var Tmp2;

	var result_240373 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!(!((node_240371 == null)))) {
		F.line = 495;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(495, 9) `not isNil(node)` "));
		}
		
		if (!((node_240371.kind == 6))) {
		F.line = 496;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(496, 9) `node.kind == JArray` "));
		}
		
		F.line = 497;
		var Tmp1 = node_240371;
		if (ConstSet27[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		result_240373 = (Tmp2 = Tmp1.elems, Tmp2)[chckIndx(index_240372, 0, Tmp2.length+0-1)-0];
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_240373;

}

function HEX5BHEX5D_263610(t_263616, key_263617) {
	var result_263619 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 258;
		var hc_263620 = [0];
		F.line = 259;
		var index_263621 = raw_get_260002(t_263616, key_263617, hc_263620, 0);
		if ((0 <= index_263621)) {
		F.line = 260;
		result_263619 = t_263616.data[chckIndx(index_263621, 0, t_263616.data.length+0-1)-0].Field2;
		}
		else {
			F.line = 3436;
			var e_263802 = null;
			F.line = 3439;
			e_263802 = {m_type: NTI4054, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 263;
			e_263802.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr(key_263617) || []), NTI138);
			F.line = 3432;
			e_263802.parent = null;
			F.line = 263;
			raiseException(e_263802, "KeyError");
		}
		
	framePtr = F.prev;

	return result_263619;

}

function init_logic_257470() {
				var Tmp3;
							var Tmp6;
								var Tmp7;
											var Tmp11;
												var Tmp12;
											var Tmp13;
												var Tmp14;

	var F={procname:"logic.initLogic",prev:framePtr,filename:"logic.nim",line:0};
	framePtr = F;
		F.line = 23;
		questions_json_257031[0] = parse_json_248257(makeNimstrLit("{\x0A\x09\"afraid\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"dont-be-afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid I might want to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"dont-be-afraid\",\x0A\x09\x09\x09\x09\"response\": \"It\'s just scaring me\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What are you afraid of?\"\x0A\x09},\x0A\x09\"almost-lost\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"remorse\",\x0A\x09\x09\x09\x09\"response\": \"Hey, I\'m sorry\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"lost\",\x0A\x09\x09\x09\x09\"response\": \"F* you!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Alright. No game. Okay.\"\x0A\x09},\x0A\x09\"am-right\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"want-to-play\",\x0A\x09\x09\x09\x09\"response\": \"So.. are we playing the game?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Yes, thank you\"\x0A\x09},\x0A\x09\"anhedonia\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Okay...\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"reject-playing\",\x0A\x09\x09\x09\x09\"response\": \"No, I\'m not playing!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Please, press \\\"Okay\\\" to play the game.\"\x0A\x09},\x0A\x09\"another-game\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"Okay, let\'s play another game\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game-desc\",\x0A\x09\x09\x09\x09\"response\": \"What\'s another game?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"How about another game?\"\x0A\x09},\x0A\x09\"black-door1\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door2\",\x0A\x09\x09\x09\x09\"response\": \"Silence, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door2\",\x0A\x09\x09\x09\x09\"response\": \"K-pop?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door2\",\x0A\x09\x09\x09\x09\"response\": \"Maybe classical music?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the music of life?\"\x0A\x09},\x0A\x09\"black-door2\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door3\",\x0A\x09\x09\x09\x09\"response\": \"Solace, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door3\",\x0A\x09\x09\x09\x09\"response\": \"Wait, what?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door3\",\x0A\x09\x09\x09\x09\"response\": \"I don\'t like it\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the gift of death?\"\x0A\x09},\x0A\x09\"black-door3\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door4\",\x0A\x09\x09\x09\x09\"response\": \"Sanguine, my broher\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door4\",\x0A\x09\x09\x09\x09\"response\": \"Like, black?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door4\",\x0A\x09\x09\x09\x09\"response\": \"Why would you ask that?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the color of night?\"\x0A\x09},\x0A\x09\"black-door4\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door5\",\x0A\x09\x09\x09\x09\"response\": \"Sublime, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door5\",\x0A\x09\x09\x09\x09\"response\": \"Salty?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door5\",\x0A\x09\x09\x09\x09\"response\": \"Spiders?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the flavor of fear?\"\x0A\x09},\x0A\x09\"black-door5\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"door-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Innocence, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"door-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"My self-esteem?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"door-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Our ability to control the world\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is life\'s greatest illusion?\"\x0A\x09},\x0A\x09\"confused\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cruelty\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to do just one thing - make sure you are dead\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"confused-more\",\x0A\x09\x09\x09\x09\"response\": \"What are you talking about?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"(just do the role-playing as we agreed) So, why are you here?\"\x0A\x09},\x0A\x09\"confused-more\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"questionable-agreeing\",\x0A\x09\x09\x09\x09\"response\": \"Oh no, no, now I remember\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"in-the-wrong-place\",\x0A\x09\x09\x09\x09\"response\": \"No! What is this?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Wait, didn\'t we talk before?\"\x0A\x09},\x0A\x09\"cruelty\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Cruelty path\"\x0A\x09},\x0A\x09\"cucumber-or-tomatoe\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"red-or-yellow\",\x0A\x09\x09\x09\x09\"response\": \"Cucumber\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"red-or-yellow\",\x0A\x09\x09\x09\x09\"response\": \"Tomatoe\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Cucumber or tomatoe?\"\x0A\x09},\x0A\x09\"daring\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"self-confident\",\x0A\x09\x09\x09\x09\"response\": \"Self-confident\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"presumptuous\",\x0A\x09\x09\x09\x09\"response\": \"Presumptuous\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Self-confident or presumptuous?\"\x0A\x09},\x0A\x09\"difference-desc\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"I hope so, let\'s go\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"irritative-asking\",\x0A\x09\x09\x09\x09\"response\": \"Is it so hard to tell me how it is different?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"It is like.. very different, substantially different\"\x0A\x09},\x0A\x09\"disclosure\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Disclosure\"\x0A\x09},\x0A\x09\"dont-be-afraid\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Yes, I like games!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"anhedonia\",\x0A\x09\x09\x09\x09\"response\": \"No, I don\'t want to play\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Don\'t be afraid. Let\'s play a game!\"\x0A\x09},\x0A\x09\"door-test-passed\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Summary of door test\"\x0A\x09},\x0A\x09\"gabriela-order\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"psycho\",\x0A\x09\x09\x09\x09\"response\": \"You are the chosen one and now is the time\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"disclosure\",\x0A\x09\x09\x09\x09\"response\": \"I just said something stupid, sorry..\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What a heck are you talking about?!\"\x0A\x09},\x0A\x09\"haggler\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"disclosure\",\x0A\x09\x09\x09\x09\"response\": \"I\'m so sorry...\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are pathetic.\"\x0A\x09},\x0A\x09\"happy-game\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Happy game!\"\x0A\x09},\x0A\x09\"in-the-wrong-place\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"negotiating\",\x0A\x09\x09\x09\x09\"response\": \"Hey, wait, let\'s talk!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"gabriela-order\",\x0A\x09\x09\x09\x09\"response\": \"I was sent by the holy order of Gabriela\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are not supposed to be here\"\x0A\x09},\x0A\x09\"irritative-asking\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"am-right\",\x0A\x09\x09\x09\x09\"response\": \"You are right\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"almost-lost\",\x0A\x09\x09\x09\x09\"response\": \"This is because you didn\'t tell me\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You don\'t even know a thing about the first game\"\x0A\x09},\x0A\x09\"killing\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cruelty\",\x0A\x09\x09\x09\x09\"response\": \"Real bad\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"pretending\",\x0A\x09\x09\x09\x09\"response\": \"Ha-ha, I was just joking\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"How bad do you want to kill me?\"\x0A\x09},\x0A\x09\"lost\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"welcome\",\x0A\x09\x09\x09\x09\"response\": \"Play again\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You have lost the game\"\x0A\x09},\x0A\x09\"negotiating\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"haggler\",\x0A\x09\x09\x09\x09\"response\": \"I have money, kitchen silver!..\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"occult-offering\",\x0A\x09\x09\x09\x09\"response\": \"I shall give you my soul and body\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"And what do you have to offer?\"\x0A\x09},\x0A\x09\"occult-offering\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Write down your name to complete the ritual\"\x0A\x09},\x0A\x09\"presumptuous\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cucumber-or-tomatoe\",\x0A\x09\x09\x09\x09\"response\": \"Self-critical\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"self-pitying\",\x0A\x09\x09\x09\x09\"response\": \"Self-pitying\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Self-critical or self-pitying?\"\x0A\x09},\x0A\x09\"pretending\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"pussy\",\x0A\x09\x09\x09\x09\"response\": \"Yes\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cruelty\",\x0A\x09\x09\x09\x09\"response\": \"No, actually I want to kill you\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Were you really joking?\"\x0A\x09},\x0A\x09\"psycho\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"lost\",\x0A\x09\x09\x09\x09\"response\": \"HAHAHAHAHAHA\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are a freaking psycho, go away\"\x0A\x09},\x0A\x09\"pussy\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"confused\",\x0A\x09\x09\x09\x09\"response\": \"What?..\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"daring\",\x0A\x09\x09\x09\x09\"response\": \"No, I can kill you!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are weak. You are not able to do what is needed.\"\x0A\x09},\x0A\x09\"questionable-agreeing\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"subterfuge\",\x0A\x09\x09\x09\x09\"response\": \"Oh no, I\'m not lying\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"regret\",\x0A\x09\x09\x09\x09\"response\": \"Yes, I shouldn\'t have..\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"I think you are lying!\"\x0A\x09},\x0A\x09\"red-or-yellow\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"silly-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Red\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"silly-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Yellow\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Red or yellow?\"\x0A\x09},\x0A\x09\"regret\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door1\",\x0A\x09\x09\x09\x09\"response\": \"Okay, ask!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door1\",\x0A\x09\x09\x09\x09\"response\": \"Whatever\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Correct. Now. If you want to stay, answer my questions.\"\x0A\x09},\x0A\x09\"reject-playing\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Okay, let me play your game\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"almost-lost\",\x0A\x09\x09\x09\x09\"response\": \"I don\'t care!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"If you don\'t choose to play, you will lose now.\"\x0A\x09},\x0A\x09\"remorse\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Yes, let\'s play\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"another-game\",\x0A\x09\x09\x09\x09\"response\": \"I still don\'t want to play\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"So are we playing the game?\"\x0A\x09},\x0A\x09\"sad-game\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Sad game\"\x0A\x09},\x0A\x09\"sad-game-desc\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"Alright, alright, let\'s play\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"difference-desc\",\x0A\x09\x09\x09\x09\"response\": \"And how is it different?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"It is a game that is different from the first\"\x0A\x09},\x0A\x09\"self-confident\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"killing\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Hmmm, I see. So let me ask again. What is your purpose?\"\x0A\x09},\x0A\x09\"self-pitying\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"welcome-repeat\",\x0A\x09\x09\x09\x09\"response\": \"Fine, thanks..\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"therapy\",\x0A\x09\x09\x09\x09\"response\": \"I will never be like others!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Oh come on, you are just fine!\"\x0A\x09},\x0A\x09\"silly-test-passed\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"what-now\",\x0A\x09\x09\x09\x09\"response\": \"So, what\'s now?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"what-now\",\x0A\x09\x09\x09\x09\"response\": \"Do I get a cookie?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Congratulations. All questions were answered correctly.\"\x0A\x09},\x0A\x09\"subterfuge\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Do something to determine success\"\x0A\x09},\x0A\x09\"therapy\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Therapy path\"\x0A\x09},\x0A\x09\"want-to-play\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"The first game\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"The second one\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Oh, this is so great! Which game do you want to play?\"\x0A\x09},\x0A\x09\"welcome\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"killing\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is your purpose?\"\x0A\x09},\x0A\x09\"welcome-repeat\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"killing\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"So what is your purpose?\"\x0A\x09},\x0A\x09\"what-now\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Yes, I do!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"reject-playing\",\x0A\x09\x09\x09\x09\"response\": \"Not really..\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Now we play the game. Do you like games?\"\x0A\x09}\x0A}\x0A"));
		F.line = 24;
		rawEcho(HEX24_245416(questions_json_257031[0]));
		L1: do {
			F.line = 25;
			var key_257602 = null;
			F.line = 25;
			var screen_257603 = null;
			if (!((questions_json_257031[0].kind == 5))) {
			F.line = 778;
			failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(778, 10) `node.kind == JObject` "));
			}
			
			L2: do {
				F.line = 779;
				var key_265058 = null;
				F.line = 779;
				var val_265059 = null;
				F.line = 1619;
				var colontmp__265060 = {data: null, counter: 0, first: 0, last: 0};
				F.line = 779;
				var Tmp3 = questions_json_257031[0];
				if (ConstSet12[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
				nimCopy(colontmp__265060, Tmp3.fields, NTI229228);
				F.line = 1645;
				var l_265061 = len_236765(colontmp__265060);
				if ((0 < colontmp__265060.counter)) {
				F.line = 1257;
				var h_265062 = colontmp__265060.first;
				L4: do {
					F.line = 1258;
						L5: while (true) {
						if (!(0 <= h_265062)) break L5;
							F.line = 1259;
							var nxt_265064 = colontmp__265060.data[chckIndx(h_265062, 0, colontmp__265060.data.length+0-1)-0].Field1;
							if (is_filled_178418(colontmp__265060.data[chckIndx(h_265062, 0, colontmp__265060.data.length+0-1)-0].Field0)) {
							F.line = 779;
							key_265058 = colontmp__265060.data[chckIndx(h_265062, 0, colontmp__265060.data.length+0-1)-0].Field2;
							F.line = 1647;
							val_265059 = colontmp__265060.data[chckIndx(h_265062, 0, colontmp__265060.data.length+0-1)-0].Field3;
							F.line = 25;
							key_257602 = key_265058;
							F.line = 780;
							screen_257603 = val_265059;
							F.line = 26;
							F.line = 1536;
							var temp_257682 = screen_257603;
							if (!((ConstSet13[temp_257682.kind] != undefined))) {
							F.line = 965;
							var msg_257754 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_257763(ConstSet19), makeNimstrLit("temp257682"), reprEnum(temp_257682.kind, NTI229202)]);
							F.line = 3436;
							var e_258266 = null;
							F.line = 3439;
							e_258266 = {m_type: NTI224039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							F.line = 970;
							e_258266.message = nimCopy(null, msg_257754, NTI138);
							F.line = 3432;
							e_258266.parent = null;
							F.line = 970;
							raiseException(e_258266, "JsonKindError");
							}
							
							F.line = 1207;
							var res_257751 = {title: null, choices: null};
							F.line = 1450;
							if (!((ConstSet20[HEX5BHEX5D_239639(temp_257682, makeNimstrLit("title")).kind] != undefined))) {
							F.line = 965;
							var msg_258410 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_257763(ConstSet22), makeNimstrLit("temp257682[\"title\"]"), reprEnum(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("title")).kind, NTI229202)]);
							F.line = 3436;
							var e_258430 = null;
							F.line = 3439;
							e_258430 = {m_type: NTI224039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							F.line = 970;
							e_258430.message = nimCopy(null, msg_258410, NTI138);
							F.line = 3432;
							e_258430.parent = null;
							F.line = 970;
							raiseException(e_258430, "JsonKindError");
							}
							
							if ((HEX5BHEX5D_239639(temp_257682, makeNimstrLit("title")).kind == 0)) {
							Tmp6 = [];
							}
							else {
								var Tmp7 = HEX5BHEX5D_239639(temp_257682, makeNimstrLit("title"));
								if (ConstSet23[Tmp7.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
							Tmp6 = Tmp7.str;
							}
							
							res_257751.title = nimCopy(null, Tmp6, NTI138);
							F.line = 1450;
							F.line = 1347;
							var list_257740 = [];
							if (!((ConstSet24[HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")).kind] != undefined))) {
							F.line = 965;
							var msg_258630 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_257763(ConstSet25), makeNimstrLit("temp257682[\"choices\"]"), reprEnum(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")).kind, NTI229202)]);
							F.line = 3436;
							var e_258650 = null;
							F.line = 3439;
							e_258650 = {m_type: NTI224039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							F.line = 970;
							e_258650.message = nimCopy(null, msg_258630, NTI138);
							F.line = 3432;
							e_258650.parent = null;
							F.line = 970;
							raiseException(e_258650, "JsonKindError");
							}
							
							L8: do {
								F.line = 1340;
								var i_257731 = 0;
								F.line = 2716;
								var colontmp__265046 = 0;
								F.line = 1349;
								colontmp__265046 = len_239483(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")));
								F.line = 2717;
								var i_265047 = 0;
								L9: do {
									F.line = 2718;
										L10: while (true) {
										if (!(i_265047 < colontmp__265046)) break L10;
											F.line = 1349;
											i_257731 = i_265047;
											F.line = 1349;
											if (!((ConstSet26[HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731).kind] != undefined))) {
											F.line = 965;
											var msg_258818 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_257763(ConstSet28), makeNimstrLit("temp257682[\"choices\"][i257731]"), reprEnum(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731).kind, NTI229202)]);
											F.line = 3436;
											var e_258838 = null;
											F.line = 3439;
											e_258838 = {m_type: NTI224039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
											F.line = 970;
											e_258838.message = nimCopy(null, msg_258818, NTI138);
											F.line = 3432;
											e_258838.parent = null;
											F.line = 970;
											raiseException(e_258838, "JsonKindError");
											}
											
											F.line = 1207;
											var res_257752 = {response: null, path: null};
											F.line = 1450;
											if (!((ConstSet29[HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("response")).kind] != undefined))) {
											F.line = 965;
											var msg_259010 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_257763(ConstSet30), makeNimstrLit("temp257682[\"choices\"][i257731][\"response\"]"), reprEnum(HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("response")).kind, NTI229202)]);
											F.line = 3436;
											var e_259030 = null;
											F.line = 3439;
											e_259030 = {m_type: NTI224039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
											F.line = 970;
											e_259030.message = nimCopy(null, msg_259010, NTI138);
											F.line = 3432;
											e_259030.parent = null;
											F.line = 970;
											raiseException(e_259030, "JsonKindError");
											}
											
											if ((HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("response")).kind == 0)) {
											Tmp11 = [];
											}
											else {
												var Tmp12 = HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("response"));
												if (ConstSet31[Tmp12.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
											Tmp11 = Tmp12.str;
											}
											
											res_257752.response = nimCopy(null, Tmp11, NTI138);
											F.line = 1450;
											if (!((ConstSet32[HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("path")).kind] != undefined))) {
											F.line = 965;
											var msg_259216 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_257763(ConstSet33), makeNimstrLit("temp257682[\"choices\"][i257731][\"path\"]"), reprEnum(HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("path")).kind, NTI229202)]);
											F.line = 3436;
											var e_259236 = null;
											F.line = 3439;
											e_259236 = {m_type: NTI224039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
											F.line = 970;
											e_259236.message = nimCopy(null, msg_259216, NTI138);
											F.line = 3432;
											e_259236.parent = null;
											F.line = 970;
											raiseException(e_259236, "JsonKindError");
											}
											
											if ((HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("path")).kind == 0)) {
											Tmp13 = [];
											}
											else {
												var Tmp14 = HEX5BHEX5D_239639(HEX5BHEX5D_240369(HEX5BHEX5D_239639(temp_257682, makeNimstrLit("choices")), i_257731), makeNimstrLit("path"));
												if (ConstSet34[Tmp14.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
											Tmp13 = Tmp14.str;
											}
											
											res_257752.path = nimCopy(null, Tmp13, NTI138);
											var Tmp15 = nimCopy(null, res_257752, NTI255111);
											if (list_257740 != null) { list_257740.push(Tmp15); } else { list_257740 = [Tmp15]; };
											F.line = 2720;
											i_265047 = addInt(i_265047, 1);
										}
								} while(false);
							} while(false);
							res_257751.choices = nimCopy(null, list_257740, NTI258615);
							HEX5BHEX5DHEX3D_259463(question_screens_257414[0], toJSStr(key_257602), res_257751);
							if (!((len_236765(colontmp__265060) == l_265061))) {
							F.line = 1648;
							failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							F.line = 1262;
							h_265062 = nxt_265064;
						}
				} while(false);
				}
				
			} while(false);
		} while(false);
		F.line = 27;
		nimCopy(default_screen_257415[0], HEX5BHEX5D_263610(question_screens_257414[0], "welcome"), NTI257015);
	framePtr = F.prev;

	
}

function new_seq_197612(len_197615) {
	var result_197617 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_197617 = new Array(len_197615); for (var i=0;i<len_197615;++i) {result_197617[i]={k: 0, parent: null, current: null, newNode: null, oldNode: null};}	framePtr = F.prev;

	return result_197617;

}

function new_seq_197649(len_197652) {
	var result_197654 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_197654 = new Array(len_197652); for (var i=0;i<len_197652;++i) {result_197654[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_197654;

}

function valueHEX3D_169839(n_169841, v_169842) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 156;
		n_169841.text = v_169842;
	framePtr = F.prev;

	
}

function value_169822(n_169824) {
	var result_169825 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 155;
		result_169825 = n_169824.text;
	framePtr = F.prev;

	return result_169825;

}

function wrap_event_189392(d_189394, n_189395, k_189396, action_189397) {

			function later_wrapper_189827() {

					function HEX3Aanonymous_189833(ev_189835) {

							function wrapper_189836() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var v_189838 = ev_189835.target.value;
									F.line = 73;
									valueHEX3D_169839(n_189831, v_189838);
									if (!(!((action_189830 == null)))) {
									F.line = 74;
									failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(74, 10) `action != nil` "));
									}
									
									F.line = 75;
									action_189830(ev_189835, n_189831);
									if (!((value_169822(n_189831) == v_189838))) {
									F.line = 77;
									ev_189835.target.value = value_169822(n_189831);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if (!((timer_189832 == null))) {
							F.line = 103;
							clearTimeout(timer_189832);
							}
							
							F.line = 104;
							timer_189832 = setTimeout(wrapper_189836, 400);
						framePtr = F.prev;

						
					}

				var result_189829 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 98;
					var action_189830 = action_189397;
					F.line = 99;
					var n_189831 = n_189395;
					F.line = 100;
					var timer_189832 = null;
					F.line = 101;
					result_189829 = HEX3Aanonymous_189833;
				framePtr = F.prev;

				return result_189829;

			}

			function enter_wrapper_189657() {

					function HEX3Aanonymous_189662(ev_189664) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if ((ev_189664.keyCode == 13)) {
							F.line = 72;
							var v_189665 = ev_189664.target.value;
							F.line = 73;
							valueHEX3D_169839(n_189661, v_189665);
							if (!(!((action_189660 == null)))) {
							F.line = 74;
							failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_189660(ev_189664, n_189661);
							if (!((value_169822(n_189661) == v_189665))) {
							F.line = 77;
							ev_189664.target.value = value_169822(n_189661);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_189659 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 92;
					var action_189660 = action_189397;
					F.line = 93;
					var n_189661 = n_189395;
					F.line = 94;
					result_189659 = HEX3Aanonymous_189662;
				framePtr = F.prev;

				return result_189659;

			}

			function std_wrapper_189399() {

					function HEX3Aanonymous_189404(ev_189406) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
								if ((n_189403.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_189403.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_189403.kind == 107);								}							if (Tmp1) {
							F.line = 72;
							var v_189425 = ev_189406.target.value;
							F.line = 73;
							valueHEX3D_169839(n_189403, v_189425);
							if (!(!((action_189402 == null)))) {
							F.line = 74;
							failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_189402(ev_189406, n_189403);
							if (!((value_169822(n_189403) == v_189425))) {
							F.line = 77;
							ev_189406.target.value = value_169822(n_189403);
							}
							
							}
							else {
								F.line = 89;
							action_189402(ev_189406, n_189403);
							}
							
						framePtr = F.prev;

						
					}

				var result_189401 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 84;
					var action_189402 = action_189397;
					F.line = 85;
					var n_189403 = n_189395;
					F.line = 86;
					result_189401 = HEX3Aanonymous_189404;
				framePtr = F.prev;

				return result_189401;

			}

	var result_189398 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 106;
		switch (k_189396) {
		case 30:
			F.line = 108;
			result_189398 = later_wrapper_189827();
			F.line = 109;
			d_189394.addEventListener("keyup", result_189398, false);
			break;
		case 29:
			F.line = 111;
			result_189398 = enter_wrapper_189657();
			F.line = 112;
			d_189394.addEventListener("keyup", result_189398, false);
			break;
		default: 
			F.line = 114;
			result_189398 = std_wrapper_189399();
			F.line = 115;
			d_189394.addEventListener(to_event_name_169695[chckIndx(k_189396, 0, to_event_name_169695.length+0-1)-0], result_189398, false);
			break;
		}
	framePtr = F.prev;

	return result_189398;

}

function apply_events_190086(n_190088) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 127;
		var dest_190089 = n_190088.dom;
		L1: do {
			F.line = 128;
			var i_190102 = 0;
			F.line = 2716;
			var colontmp__265187 = 0;
			F.line = 128;
			colontmp__265187 = (n_190088.events != null ? n_190088.events.length : 0);
			F.line = 2717;
			var i_265188 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_265188 < colontmp__265187)) break L3;
						F.line = 128;
						i_190102 = i_265188;
						F.line = 129;
						n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field2"] = wrap_event_189392(dest_190089, n_190088, n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field0"], n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field1"]);
						F.line = 2720;
						i_265188 = addInt(i_265188, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_58025(n_58027, s_58028) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
		F.line = 299;
		n_58027.style = {};
		L1: do {
			F.line = 300;
			var i_58221 = 0;
			F.line = 2653;
			var colontmp__265199 = 0;
			F.line = 300;
			colontmp__265199 = subInt(s_58028.length, 1);
			F.line = 2669;
			var res_265200 = 0;
			L2: do {
				F.line = 2670;
					L3: while (true) {
					if (!(res_265200 <= colontmp__265199)) break L3;
						F.line = 300;
						i_58221 = res_265200;
						F.line = 301;
						n_58027.style[s_58028[i_58221]] = s_58028[addInt(i_58221, 1)];
						F.line = 2672;
						res_265200 = addInt(res_265200, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function to_dom_190167(n_190169, use_attached_node_190170, kxi_190171) {
			var Tmp9;
			var Tmp10;

	var result_190172 = null;

	var F={procname:"karax.toDom",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (use_attached_node_190170) {
		if (!((n_190169.dom == null))) {
		F.line = 139;
		result_190172 = n_190169.dom;
		break BeforeRet;
		}
		
		}
		
		if ((n_190169.kind == 0)) {
		F.line = 141;
		result_190172 = document.createTextNode(n_190169.text);
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		}
		else {
		if ((n_190169.kind == 6)) {
		F.line = 144;
		result_190172 = document.createElement("div");
		F.line = 145;
		result_190172.innerHTML = n_190169.text;
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 147;
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 3)) {
		F.line = 149;
		var x_190243 = vcomponents_182026[0][n_190169.text](n_190169.kids);
		F.line = 150;
		result_190172 = to_dom_190167(x_190243, use_attached_node_190170, kxi_190171);
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 153;
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 4)) {
		F.line = 155;
		result_190172 = n_190169.dom;
		if (!(!((result_190172 == null)))) {
		F.line = 156;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(156, 12) `result != nil` "));
		}
		
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 159;
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 5)) {
		F.line = 161;
		var x_190422 = n_190169;
		if (!((x_190422.onAttachImpl == null))) {
		F.line = 162;
		x_190422.onAttachImpl(x_190422);
		}
		
		if (!(!((x_190422.renderImpl == null)))) {
		F.line = 163;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(163, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_190422.expanded == null)) {
		F.line = 165;
		x_190422.expanded = x_190422.renderImpl(x_190422);
		}
		
		if (!(!((x_190422.expanded == null)))) {
		F.line = 167;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(167, 12) `x.expanded != nil` "));
		}
		
		F.line = 168;
		result_190172 = to_dom_190167(x_190422.expanded, use_attached_node_190170, kxi_190171);
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 170;
		break BeforeRet;
		}
		else {
			F.line = 172;
			result_190172 = document.createElement(to_tag_169689[chckIndx(n_190169.kind, 0, to_tag_169689.length+0-1)-0]);
			F.line = 123;
			n_190169.dom = result_190172;
			if (!((n_190169.id == null))) {
			F.line = 124;
			kxi_189326[0].byId[n_190169.id] = n_190169;
			}
			
			L1: do {
				F.line = 174;
				var k_190831 = null;
				L2: do {
					F.line = 282;
					var i_265167 = 0;
					F.line = 2716;
					var colontmp__265168 = 0;
					F.line = 282;
					colontmp__265168 = (n_190169.kids != null ? n_190169.kids.length : 0);
					F.line = 2717;
					var i_265169 = 0;
					L3: do {
						F.line = 2718;
							L4: while (true) {
							if (!(i_265169 < colontmp__265168)) break L4;
								F.line = 282;
								i_265167 = i_265169;
								F.line = 174;
								k_190831 = n_190169.kids[chckIndx(i_265167, 0, n_190169.kids.length+0-1)-0];
								F.line = 175;
								result_190172.appendChild(to_dom_190167(k_190831, use_attached_node_190170, kxi_190171));
								F.line = 2720;
								i_265169 = addInt(i_265169, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_190169.text == null))) {
			F.line = 178;
			result_190172.value = n_190169.text;
			}
			
		}
		}}}}
		if (!((n_190169.id == null))) {
		F.line = 180;
		result_190172.id = n_190169.id;
		}
		
		if (!((n_190169.class == null))) {
		F.line = 182;
		result_190172.className = n_190169.class;
		}
		
		L5: do {
			F.line = 185;
			var k_190832 = null;
			F.line = 185;
			var v_190833 = null;
			L6: do {
				F.line = 285;
				var i_265180 = 0;
				F.line = 2653;
				var colontmp__265181 = 0;
				F.line = 285;
				colontmp__265181 = subInt((n_190169.attrs != null ? n_190169.attrs.length : 0), 2);
				F.line = 2669;
				var res_265182 = 0;
				L7: do {
					F.line = 2670;
						L8: while (true) {
						if (!(res_265182 <= colontmp__265181)) break L8;
							F.line = 285;
							i_265180 = res_265182;
							F.line = 185;
							k_190832 = n_190169.attrs[chckIndx(i_265180, 0, n_190169.attrs.length+0-1)-0];
							F.line = 286;
							v_190833 = n_190169.attrs[chckIndx(addInt(i_265180, 1), 0, n_190169.attrs.length+0-1)-0];
							if (!((v_190833 == null))) {
							F.line = 187;
							result_190172.setAttribute(k_190832, v_190833);
							}
							
							F.line = 2672;
							res_265182 = addInt(res_265182, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 188;
		apply_events_190086(n_190169);
			if (!!((kxi_190171 == null))) Tmp10 = false; else {				Tmp10 = (n_190169 == kxi_190171.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_190171.toFocus == null);			}		if (Tmp9) {
		F.line = 190;
		kxi_190171.toFocus = result_190172;
		}
		
		if (!((n_190169.style == null))) {
		F.line = 191;
		apply_style_58025(result_190172, n_190169.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_190172;

}

function replace_by_id_191012(id_191014, new_tree_191015) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 215;
		var x_191016 = document.getElementById(id_191014);
		F.line = 216;
		x_191016.parentNode.replaceChild(new_tree_191015, x_191016);
		F.line = 217;
		new_tree_191015.id = id_191014;
	framePtr = F.prev;

	
}

function len_170742(x_170744) {
	var result_170745 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 246;
		result_170745 = (x_170744.kids != null ? x_170744.kids.length : 0);
	framePtr = F.prev;

	return result_170745;

}

function HEX5BHEX5D_170764(x_170766, idx_170767) {
	var result_170768 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 247;
		result_170768 = x_170766.kids[chckIndx(idx_170767, 0, x_170766.kids.length+0-1)-0];
	framePtr = F.prev;

	return result_170768;

}

function same_190920(n_190922, e_190923, nesting_190924) {
			var Tmp1;
			var Tmp2;

	var result_190926 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_189326[0].orphans.hasOwnProperty(n_190922.id)) {
		F.line = 194;
		result_190926 = true;
		break BeforeRet;
		}
		
		if ((n_190922.kind == 5)) {
		F.line = 196;
		result_190926 = same_190920(n_190922.expanded, e_190923, addInt(nesting_190924, 1));
		}
		else {
		if ((n_190922.kind == 6)) {
		F.line = 198;
		result_190926 = true;
		}
		else {
			if ((n_190922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_190922.kind == 4);			}		if (Tmp1) {
		F.line = 201;
		result_190926 = true;
		}
		else {
		if ((to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0] == e_190923.nodeName)) {
		F.line = 203;
		result_190926 = true;
		if (!((n_190922.kind == 0))) {
			if (!!((e_190923.childNodes.length == len_170742(n_190922)))) Tmp2 = false; else {				Tmp2 = !((n_190922.kind == 111));			}		if (Tmp2) {
		F.line = 207;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_170742(n_190922))+""), makeNimstrLit(" real "), cstrToNimstr((e_190923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_190924)+""));
		F.line = 208;
		result_190926 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 209;
			var i_190994 = 0;
			F.line = 2716;
			var colontmp__265206 = 0;
			F.line = 209;
			colontmp__265206 = len_170742(n_190922);
			F.line = 2717;
			var i_265207 = 0;
			L4: do {
				F.line = 2718;
					L5: while (true) {
					if (!(i_265207 < colontmp__265206)) break L5;
						F.line = 209;
						i_190994 = i_265207;
						if (!(same_190920(HEX5BHEX5D_170764(n_190922, i_190994), e_190923.childNodes[i_190994], addInt(nesting_190924, 1)))) {
						F.line = 210;
						result_190926 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_265207 = addInt(i_265207, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 212;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_190923.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_190926;

}

function eq_56814(a_56816, b_56817) {
	var result_56818 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_56816 == null)) {
		if ((b_56817 == null)) {
		F.line = 229;
		result_56818 = true;
		break BeforeRet;
		}
		else {
			F.line = 230;
			result_56818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_56817 == null)) {
		F.line = 231;
		result_56818 = false;
		break BeforeRet;
		}
		}
		if (!((a_56816.length == b_56817.length))) {
		F.line = 232;
		result_56818 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 233;
			var i_56916 = 0;
			F.line = 2716;
			var colontmp__265249 = 0;
			F.line = 233;
			colontmp__265249 = a_56816.length;
			F.line = 2717;
			var i_265250 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_265250 < colontmp__265249)) break L3;
						F.line = 233;
						i_56916 = i_265250;
						if (!((a_56816[i_56916] == b_56817[i_56916]))) {
						F.line = 234;
						result_56818 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_265250 = addInt(i_265250, 1);
					}
			} while(false);
		} while(false);
		F.line = 235;
		result_56818 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_56818;

}

function same_attrs_172680(a_172682, b_172683) {
	var result_172684 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_172682.attrs != null ? a_172682.attrs.length : 0) == (b_172683.attrs != null ? b_172683.attrs.length : 0))) {
		F.line = 290;
		result_172684 = true;
		L1: do {
			F.line = 291;
			var i_172707 = 0;
			F.line = 2716;
			var colontmp__265254 = 0;
			F.line = 291;
			colontmp__265254 = (a_172682.attrs != null ? a_172682.attrs.length : 0);
			F.line = 2717;
			var i_265255 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_265255 < colontmp__265254)) break L3;
						F.line = 291;
						i_172707 = i_265255;
						if (!((a_172682.attrs[chckIndx(i_172707, 0, a_172682.attrs.length+0-1)-0] == b_172683.attrs[chckIndx(i_172707, 0, b_172683.attrs.length+0-1)-0]))) {
						F.line = 292;
						result_172684 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_265255 = addInt(i_265255, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_172684;

}

function eq_191214(a_191216, b_191217, recursive_191218) {
			var Tmp4;
			var Tmp5;

	var result_191219 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_191216.kind == b_191217.kind))) {
		F.line = 239;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if (!((a_191216.id == b_191217.id))) {
		F.line = 242;
		result_191219 = 1;
		break BeforeRet;
		}
		
		F.line = 243;
		result_191219 = 3;
		if (!((a_191216.index == b_191217.index))) {
		F.line = 246;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if ((a_191216.kind == 0)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 250;
		result_191219 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_191216.kind == 3)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 252;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if (!((len_170742(a_191216) == len_170742(b_191217)))) {
		F.line = 253;
		result_191219 = 1;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 254;
			var i_192014 = 0;
			F.line = 2716;
			var colontmp__265239 = 0;
			F.line = 254;
			colontmp__265239 = len_170742(a_191216);
			F.line = 2717;
			var i_265240 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_265240 < colontmp__265239)) break L3;
						F.line = 254;
						i_192014 = i_265240;
						if ((eq_191214(HEX5BHEX5D_170764(a_191216, i_192014), HEX5BHEX5D_170764(b_191217, i_192014), recursive_191218) == 1)) {
						F.line = 255;
						result_191219 = 1;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_265240 = addInt(i_265240, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_191216.kind == 4)) {
		F.line = 257;
		result_191219 = 3;
		break BeforeRet;
		}
		else {
		if ((a_191216.kind == 6)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 260;
		result_191219 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_191217.kind == 5)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 265;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if (!((a_191216.key == b_191217.key))) {
		F.line = 271;
		result_191219 = 1;
		break BeforeRet;
		}
		
		F.line = 272;
		result_191219 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_191216.class == b_191217.class))) Tmp5 = true; else {				Tmp5 = !(eq_56814(a_191216.style, b_191217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_172680(a_191216, b_191217));			}		if (Tmp4) {
		F.line = 278;
		result_191219 = 2;
		break BeforeRet;
		}
		
		if (recursive_191218) {
		if (!((len_170742(a_191216) == len_170742(b_191217)))) {
		F.line = 282;
		result_191219 = 1;
		break BeforeRet;
		}
		
		L6: do {
			F.line = 283;
			var i_192608 = 0;
			F.line = 2716;
			var colontmp__265244 = 0;
			F.line = 283;
			colontmp__265244 = len_170742(a_191216);
			F.line = 2717;
			var i_265245 = 0;
			L7: do {
				F.line = 2718;
					L8: while (true) {
					if (!(i_265245 < colontmp__265244)) break L8;
						F.line = 283;
						i_192608 = i_265245;
						if (!((eq_191214(HEX5BHEX5D_170764(a_191216, i_192608), HEX5BHEX5D_170764(b_191217, i_192608), true) == 3))) {
						F.line = 285;
						result_191219 = 1;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_265245 = addInt(i_265245, 1);
					}
			} while(false);
		} while(false);
		}
		
		F.line = 288;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_191219;

}

function update_styles_192642(new_node_192644, old_node_192645) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_192645.dom == null))) {
		if (!((new_node_192644.style == null))) {
		F.line = 293;
		apply_style_58025(old_node_192645.dom, new_node_192644.style);
		}
		else {
			F.line = 294;
			old_node_192645.dom.style = {m_type: NTI42283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 295;
		old_node_192645.dom.className = new_node_192644.class;
		}
		
		F.line = 296;
		old_node_192645.style = new_node_192644.style;
		F.line = 297;
		old_node_192645.class = new_node_192644.class;
	framePtr = F.prev;

	
}

function take_over_attr_170674(new_node_170676, old_node_170677) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 230;
		old_node_170677.attrs = new_node_170676.attrs;
	framePtr = F.prev;

	
}

function update_attributes_192690(new_node_192692, old_node_192693) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_192693.dom == null))) {
		L1: do {
			F.line = 302;
			var k_192702 = null;
			F.line = 302;
			var __192703 = null;
			L2: do {
				F.line = 285;
				var i_265261 = 0;
				F.line = 2653;
				var colontmp__265262 = 0;
				F.line = 285;
				colontmp__265262 = subInt((old_node_192693.attrs != null ? old_node_192693.attrs.length : 0), 2);
				F.line = 2669;
				var res_265263 = 0;
				L3: do {
					F.line = 2670;
						L4: while (true) {
						if (!(res_265263 <= colontmp__265262)) break L4;
							F.line = 285;
							i_265261 = res_265263;
							F.line = 302;
							k_192702 = old_node_192693.attrs[chckIndx(i_265261, 0, old_node_192693.attrs.length+0-1)-0];
							F.line = 286;
							__192703 = old_node_192693.attrs[chckIndx(addInt(i_265261, 1), 0, old_node_192693.attrs.length+0-1)-0];
							F.line = 303;
							old_node_192693.dom.removeAttribute(k_192702);
							F.line = 2672;
							res_265263 = addInt(res_265263, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 304;
			var k_192704 = null;
			F.line = 304;
			var v_192705 = null;
			L6: do {
				F.line = 285;
				var i_265269 = 0;
				F.line = 2653;
				var colontmp__265270 = 0;
				F.line = 285;
				colontmp__265270 = subInt((new_node_192692.attrs != null ? new_node_192692.attrs.length : 0), 2);
				F.line = 2669;
				var res_265271 = 0;
				L7: do {
					F.line = 2670;
						L8: while (true) {
						if (!(res_265271 <= colontmp__265270)) break L8;
							F.line = 285;
							i_265269 = res_265271;
							F.line = 304;
							k_192704 = new_node_192692.attrs[chckIndx(i_265269, 0, new_node_192692.attrs.length+0-1)-0];
							F.line = 286;
							v_192705 = new_node_192692.attrs[chckIndx(addInt(i_265269, 1), 0, new_node_192692.attrs.length+0-1)-0];
							if (!((v_192705 == null))) {
							F.line = 306;
							old_node_192693.dom.setAttribute(k_192704, v_192705);
							}
							
							F.line = 2672;
							res_265271 = addInt(res_265271, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 307;
		take_over_attr_170674(new_node_192692, old_node_192693);
	framePtr = F.prev;

	
}

function add_patch_192814(kxi_192816, ka_192817, parenta_192818, currenta_192819, na_192820, old_node_192821) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 336;
		var l_192822 = kxi_192816.patchLen;
		if (((kxi_192816.patches != null ? kxi_192816.patches.length : 0) <= l_192822)) {
		F.line = 339;
		if (kxi_192816.patches != null) { kxi_192816.patches.push({k: ka_192817, parent: parenta_192818, current: currenta_192819, newNode: na_192820, oldNode: old_node_192821}); } else { kxi_192816.patches = [{k: ka_192817, parent: parenta_192818, current: currenta_192819, newNode: na_192820, oldNode: old_node_192821}]; };
		}
		else {
			F.line = 342;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].k = ka_192817;
			F.line = 343;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].parent = parenta_192818;
			F.line = 344;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].current = currenta_192819;
			F.line = 345;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].newNode = na_192820;
			F.line = 346;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].oldNode = old_node_192821;
		}
		
		F.line = 347;
		kxi_192816.patchLen = addInt(kxi_192816.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_193245(new_node_193247, old_node_193248, parent_193249, current_193250, kxi_193251) {
						var Tmp5;

	var F={procname:"karax.diff",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 433;
		var result_193401 = eq_191214(new_node_193247, old_node_193248, false);
		F.line = 434;
		switch (result_193401) {
		case 0:
			F.line = 436;
			if (kxi_193251.components != null) { kxi_193251.components.push({oldNode: old_node_193248, newNode: new_node_193247, parent: parent_193249, current: current_193250}); } else { kxi_193251.components = [{oldNode: old_node_193248, newNode: new_node_193247, parent: parent_193249, current: current_193250}]; };
			break;
		case 3:
		case 2:
			F.line = 441;
			new_node_193247.dom = old_node_193248.dom;
			if ((result_193401 == 2)) {
			F.line = 443;
			update_styles_192642(new_node_193247, old_node_193248);
			F.line = 444;
			update_attributes_192690(new_node_193247, old_node_193248);
			if ((old_node_193248.kind == 0)) {
			F.line = 446;
			old_node_193248.text = new_node_193247.text;
			F.line = 447;
			old_node_193248.dom.nodeValue = new_node_193247.text;
			}
			
			}
			
			F.line = 452;
			var new_length_193420 = len_170742(new_node_193247);
			F.line = 453;
			var old_length_193421 = len_170742(old_node_193248);
			if (((new_length_193420 == 0) && (old_length_193421 == 0))) {
			F.line = 454;
			break BeforeRet;
			}
			
			F.line = 455;
			var min_length_193422 = nimMin(new_length_193420, old_length_193421);
			if (!((old_node_193248.kind == new_node_193247.kind))) {
			F.line = 457;
			failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(457, 12) `oldNode.kind == newNode.kind` "));
			}
			
			F.line = 458;
			var common_prefix_193602 = 0;
			L1: do {
				F.line = 461;
					L2: while (true) {
					if (!(common_prefix_193602 < min_length_193422)) break L2;
						if ((eq_191214(HEX5BHEX5D_170764(new_node_193247, common_prefix_193602), HEX5BHEX5D_170764(old_node_193248, common_prefix_193602), true) == 3)) {
						F.line = 463;
						add_patch_192814(kxi_193251, 5, null, null, HEX5BHEX5D_170764(new_node_193247, common_prefix_193602), HEX5BHEX5D_170764(old_node_193248, common_prefix_193602));
						F.line = 464;
						common_prefix_193602 = addInt(common_prefix_193602, 1);
						}
						else {
							F.line = 466;
							break L1;
						}
						
					}
			} while(false);
			F.line = 469;
			var old_pos_193614 = subInt(old_length_193421, 1);
			F.line = 470;
			var new_pos_193615 = subInt(new_length_193420, 1);
			L3: do {
				F.line = 471;
					L4: while (true) {
						if (!(common_prefix_193602 <= old_pos_193614)) Tmp5 = false; else {							Tmp5 = (common_prefix_193602 <= new_pos_193615);						}					if (!Tmp5) break L4;
						if ((eq_191214(HEX5BHEX5D_170764(new_node_193247, new_pos_193615), HEX5BHEX5D_170764(old_node_193248, old_pos_193614), true) == 3)) {
						F.line = 473;
						add_patch_192814(kxi_193251, 5, null, null, HEX5BHEX5D_170764(new_node_193247, new_pos_193615), HEX5BHEX5D_170764(old_node_193248, old_pos_193614));
						F.line = 474;
						old_pos_193614 = subInt(old_pos_193614, 1);
						F.line = 475;
						new_pos_193615 = subInt(new_pos_193615, 1);
						}
						else {
							F.line = 477;
							break L3;
						}
						
					}
			} while(false);
			F.line = 479;
			var pos_193633 = addInt(nimMin(old_pos_193614, new_pos_193615), 1);
			L6: do {
				F.line = 481;
				var i_193639 = 0;
				F.line = 2679;
				var colontmp__265214 = 0;
				F.line = 481;
				colontmp__265214 = subInt(pos_193633, 1);
				F.line = 2689;
				var res_265215 = common_prefix_193602;
				L7: do {
					F.line = 2690;
						L8: while (true) {
						if (!(res_265215 <= colontmp__265214)) break L8;
							F.line = 481;
							i_193639 = res_265215;
							F.line = 482;
							diff_193245(HEX5BHEX5D_170764(new_node_193247, i_193639), HEX5BHEX5D_170764(old_node_193248, i_193639), current_193250, current_193250.childNodes[chckIndx(i_193639, 0, current_193250.childNodes.length+0-1)-0], kxi_193251);
							F.line = 2692;
							res_265215 = addInt(res_265215, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_193614, 1) == old_length_193421)) {
			L9: do {
				F.line = 485;
				var i_193645 = 0;
				F.line = 2689;
				var res_265221 = pos_193633;
				L10: do {
					F.line = 2690;
						L11: while (true) {
						if (!(res_265221 <= new_pos_193615)) break L11;
							F.line = 485;
							i_193645 = res_265221;
							F.line = 486;
							add_patch_192814(kxi_193251, 2, current_193250, null, HEX5BHEX5D_170764(new_node_193247, i_193645), null);
							F.line = 2692;
							res_265221 = addInt(res_265221, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 488;
				var before_193646 = current_193250.childNodes[chckIndx(addInt(old_pos_193614, 1), 0, current_193250.childNodes.length+0-1)-0];
				L12: do {
					F.line = 489;
					var i_193652 = 0;
					F.line = 2689;
					var res_265227 = pos_193633;
					L13: do {
						F.line = 2690;
							L14: while (true) {
							if (!(res_265227 <= new_pos_193615)) break L14;
								F.line = 489;
								i_193652 = res_265227;
								F.line = 490;
								add_patch_192814(kxi_193251, 3, current_193250, before_193646, HEX5BHEX5D_170764(new_node_193247, i_193652), null);
								F.line = 2692;
								res_265227 = addInt(res_265227, 1);
							}
					} while(false);
				} while(false);
			}
			
			L15: do {
				F.line = 492;
				var i_193658 = 0;
				F.line = 2689;
				var res_265233 = pos_193633;
				L16: do {
					F.line = 2690;
						L17: while (true) {
						if (!(res_265233 <= old_pos_193614)) break L17;
							F.line = 492;
							i_193658 = res_265233;
							F.line = 493;
							add_patch_192814(kxi_189326[0], 4, null, null, null, HEX5BHEX5D_170764(old_node_193248, i_193658));
							F.line = 495;
							add_patch_192814(kxi_193251, 1, current_193250, current_193250.childNodes[chckIndx(i_193658, 0, current_193250.childNodes.length+0-1)-0], null, null);
							F.line = 2692;
							res_265233 = addInt(res_265233, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 497;
			add_patch_192814(kxi_189326[0], 4, null, null, null, old_node_193248);
			F.line = 498;
			add_patch_192814(kxi_193251, 0, parent_193249, current_193250, new_node_193247, null);
			break;
		case 4:
			if (true) {
			F.line = 499;
			failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(499, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	
}

function apply_components_194014(kxi_194016) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 507;
		var i_194018 = 0;
		L1: do {
			F.line = 510;
				L2: while (true) {
				if (!(i_194018 < (kxi_194016.components != null ? kxi_194016.components.length : 0))) break L2;
					F.line = 511;
					var x_194024 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].oldNode;
					F.line = 512;
					var new_node_194025 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].newNode;
						if (!!((x_194024.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_194024.changedImpl(x_194024, new_node_194025);						}					if (Tmp3) {
					F.line = 518;
					var current_194401 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].current;
					F.line = 519;
					var parent_194402 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].parent;
					F.line = 520;
					x_194024.updatedImpl(x_194024, new_node_194025);
					F.line = 521;
					var old_expanded_194403 = x_194024.expanded;
					F.line = 522;
					x_194024.expanded = x_194024.renderImpl(x_194024);
					F.line = 525;
					x_194024.renderedVersion = x_194024.version;
					if ((old_expanded_194403 == null)) {
					F.line = 527;
					add_patch_192814(kxi_189326[0], 4, null, null, null, x_194024);
					F.line = 528;
					add_patch_192814(kxi_194016, 0, parent_194402, current_194401, x_194024.expanded, null);
					}
					else {
						F.line = 532;
						diff_193245(x_194024.expanded, old_expanded_194403, parent_194402, current_194401, kxi_194016);
					}
					
					}
					
					F.line = 547;
					i_194018 = addInt(i_194018, 1);
				}
		} while(false);
		F.line = 548;
		if (kxi_194016.components === null) kxi_194016.components = [];
               if (kxi_194016.components.length < 0) { for (var i=kxi_194016.components.length;i<0;++i) kxi_194016.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_194016.components.length = 0; };
	framePtr = F.prev;

	
}

function move_dom_192907(dest_192909, src_192910) {
	var F={procname:"karax.moveDom",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 361;
		dest_192909.dom = src_192910.dom;
		F.line = 362;
		src_192910.dom = null;
		if (!((len_170742(dest_192909) == len_170742(src_192910)))) {
		F.line = 363;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(363, 10) `dest.len == src.len` "));
		}
		
		L1: do {
			F.line = 364;
			var i_193008 = 0;
			F.line = 2716;
			var colontmp__265288 = 0;
			F.line = 364;
			colontmp__265288 = len_170742(dest_192909);
			F.line = 2717;
			var i_265289 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_265289 < colontmp__265288)) break L3;
						F.line = 364;
						i_193008 = i_265289;
						F.line = 365;
						move_dom_192907(HEX5BHEX5D_170764(dest_192909, i_193008), HEX5BHEX5D_170764(src_192910, i_193008));
						F.line = 2720;
						i_265289 = addInt(i_265289, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_170782(x_170784, idx_170785, y_170786) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 248;
		x_170784.kids[chckIndx(idx_170785, 0, x_170784.kids.length+0-1)-0] = y_170786;
	framePtr = F.prev;

	
}

function apply_patch_193022(kxi_193024) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 368;
			var i_193032 = 0;
			F.line = 2716;
			var colontmp__265278 = 0;
			F.line = 368;
			colontmp__265278 = kxi_193024.patchLen;
			F.line = 2717;
			var i_265279 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_265279 < colontmp__265278)) break L3;
						F.line = 368;
						i_193032 = i_265279;
						F.line = 369;
						var p_193033 = nimCopy(null, kxi_193024.patches[chckIndx(i_193032, 0, kxi_193024.patches.length+0-1)-0], NTI189209);
						F.line = 370;
						switch (p_193033.k) {
						case 0:
							F.line = 372;
							var nn_193034 = to_dom_190167(p_193033.newNode, true, kxi_193024);
							if ((p_193033.parent == null)) {
							F.line = 374;
							replace_by_id_191012(kxi_193024.rootId, nn_193034);
							}
							else {
								F.line = 376;
							p_193033.parent.replaceChild(nn_193034, p_193033.current);
							}
							
							break;
						case 5:
							F.line = 378;
							move_dom_192907(p_193033.newNode, p_193033.oldNode);
							break;
						case 1:
							F.line = 380;
							p_193033.parent.removeChild(p_193033.current);
							break;
						case 2:
							F.line = 382;
							var nn_193043 = to_dom_190167(p_193033.newNode, true, kxi_193024);
							F.line = 383;
							p_193033.parent.appendChild(nn_193043);
							break;
						case 3:
							F.line = 385;
							var nn_193044 = to_dom_190167(p_193033.newNode, true, kxi_193024);
							F.line = 386;
							p_193033.parent.insertBefore(nn_193044, p_193033.current);
							break;
						case 4:
							F.line = 388;
							var n_193045 = p_193033.oldNode;
							if (!((n_193045.id == null))) {
							F.line = 389;
							delete kxi_193024.byId[n_193045.id];
							}
							
							if ((n_193045.kind == 5)) {
							F.line = 391;
							var x_193063 = n_193045;
							if (!((x_193063.onDetachImpl == null))) {
							F.line = 392;
							x_193063.onDetachImpl(x_193063);
							}
							
							}
							
							if (!(kxi_193024.surpressRedraws)) {
							F.line = 394;
							n_193045.dom = null;
							}
							
							break;
						}
						F.line = 2720;
						i_265279 = addInt(i_265279, 1);
					}
			} while(false);
		} while(false);
		F.line = 395;
		kxi_193024.patchLen = 0;
		L4: do {
			F.line = 396;
			var i_193076 = 0;
			F.line = 2716;
			var colontmp__265283 = 0;
			F.line = 396;
			colontmp__265283 = kxi_193024.patchLenV;
			F.line = 2717;
			var i_265284 = 0;
			L5: do {
				F.line = 2718;
					L6: while (true) {
					if (!(i_265284 < colontmp__265283)) break L6;
						F.line = 396;
						i_193076 = i_265284;
						F.line = 397;
						var p_193077 = nimCopy(null, kxi_193024.patchesV[chckIndx(i_193076, 0, kxi_193024.patchesV.length+0-1)-0], NTI189211);
						F.line = 398;
						HEX5BHEX5DHEX3D_170782(p_193077.parent, p_193077.pos, p_193077.newChild);
						if (!(!((p_193077.newChild.dom == null)))) {
						F.line = 399;
						failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(399, 12) `p.newChild.dom != nil` "));
						}
						
						F.line = 2720;
						i_265284 = addInt(i_265284, 1);
					}
			} while(false);
		} while(false);
		F.line = 400;
		kxi_193024.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_196046(kxi_196048) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_196048.renderer == null)) {
		F.line = 596;
		break BeforeRet;
		}
		
		F.line = 597;
		var rdata_196053 = {hashPart: window.location.hash};
		F.line = 598;
		var newtree_196054 = kxi_196048.renderer(rdata_196053);
		F.line = 599;
		kxi_196048.runCount = addInt(kxi_196048.runCount, 1);
		F.line = 600;
		newtree_196054.id = kxi_196048.rootId;
		F.line = 601;
		kxi_196048.toFocus = null;
		if ((kxi_196048.currentTree == null)) {
		F.line = 603;
		var asdom_196069 = to_dom_190167(newtree_196054, true, kxi_196048);
		F.line = 604;
		replace_by_id_191012(kxi_196048.rootId, asdom_196069);
		}
		else {
			if (!(same_190920(kxi_196048.currentTree, document.getElementById(kxi_196048.rootId), 0))) {
			F.line = 606;
			failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(606, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			F.line = 607;
			var olddom_196201 = document.getElementById(kxi_196048.rootId);
			F.line = 608;
			diff_193245(newtree_196054, kxi_196048.currentTree, null, olddom_196201, kxi_196048);
		}
		
		F.line = 612;
		apply_components_194014(kxi_196048);
		F.line = 617;
		apply_patch_193022(kxi_196048);
		F.line = 618;
		kxi_196048.currentTree = newtree_196054;
		if (!(same_190920(kxi_196048.currentTree, document.getElementById(kxi_196048.rootId), 0))) {
		F.line = 619;
		failed_assert_impl_15051(makeNimstrLit("/home/grfork/repos/karax/karax/karax.nim(619, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_196048.postRenderCallback == null))) {
		F.line = 622;
		kxi_196048.postRenderCallback(rdata_196053);
		}
		
		if (!((kxi_196048.toFocus == null))) {
		F.line = 626;
		kxi_196048.toFocus.focus();
		}
		
		F.line = 627;
		kxi_196048.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function init_197446(ev_197448) {

		function HEX3Aanonymous_197449() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 652;
				dodraw_196046(kxi_189326[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 652;
		kxi_189326[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_197449);
	framePtr = F.prev;

	
}

function redraw_197214(kxi_197216) {

		function HEX3Aanonymous_197401() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 645;
				dodraw_196046(kxi_197216);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((kxi_197216.renderId == 0)) {
		F.line = 645;
		kxi_197216.renderId = window.requestAnimationFrame(HEX3Aanonymous_197401);
		}
		
	framePtr = F.prev;

	
}

function set_renderer_197478(renderer_197483, root_197484, client_post_render_callback_197488) {

		function HEX3Aanonymous_197710() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 675;
				redraw_197214(kxi_189326[0]);
			framePtr = F.prev;

			
		}

	var result_197489 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_197484) == null)) {
		F.line = 661;
		var msg_197495 = (("Could not find a <div> with id=" + root_197484) + ". Karax needs it as its rendering target.");
		F.line = 3436;
		var e_197498 = null;
		F.line = 3439;
		e_197498 = {m_type: NTI4026, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 663;
		e_197498.message = nimCopy(null, cstrToNimstr(msg_197495), NTI138);
		F.line = 3432;
		e_197498.parent = null;
		F.line = 663;
		raiseException(e_197498, "Exception");
		}
		
		F.line = 665;
		result_197489 = {rootId: root_197484, renderer: renderer_197483, postRenderCallback: client_post_render_callback_197488, patches: new_seq_197612(60), patchesV: new_seq_197649(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 673;
		kxi_189326[0] = result_197489;
		F.line = 674;
		window.onload = init_197446;
		F.line = 675;
		window.onhashchange = HEX3Aanonymous_197710;
	framePtr = F.prev;

	return result_197489;

}

function HEX5BHEX5D_84681(s_84685, x_84687) {
	var result_84688 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3936;
		var a_84801 = x_84687.a;
		F.line = 3937;
		var l_85001 = addInt(subInt(x_84687.b, a_84801), 1);
		F.line = 3938;
		result_84688 = nimCopy(null, mnewString(chckRange(l_85001, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 3939;
			var i_85009 = 0;
			F.line = 2717;
			var i_265298 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_265298 < l_85001)) break L3;
						F.line = 3939;
						i_85009 = i_265298;
						F.line = 3939;
						result_84688[chckIndx(i_85009, 0, result_84688.length+0-1)-0] = s_84685[chckIndx(addInt(i_85009, a_84801), 0, s_84685.length+0-1)-0];
						F.line = 2720;
						i_265298 = addInt(i_265298, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_84688;

}

function HEX2EHEX2E_84620(a_84624, b_84625) {
	var result_84627 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 500;
		nimCopy(result_84627, {a: a_84624, b: b_84625}, NTI73907);
	framePtr = F.prev;

	return result_84627;

}

function get_or_default_264586(t_264591, key_264592, default_264593) {
		var Tmp1;

	var result_264594 = {title: null, choices: null};

	var F={procname:"getOrDefault.getOrDefault",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 139;
		var hc_264595 = [0];
		F.line = 140;
		var index_264596 = raw_get_260002(t_264591, key_264592, hc_264595, 0);
		F.line = 141;
		if ((0 <= index_264596)) {
		Tmp1 = t_264591.data[chckIndx(index_264596, 0, t_264591.data.length+0-1)-0].Field2;
		}
		else {
		Tmp1 = default_264593;
		}
		
		nimCopy(result_264594, Tmp1, NTI257015);
	framePtr = F.prev;

	return result_264594;

}

function new_vnode_172228(kind_172230) {
	var result_172231 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		result_172231 = {kind: kind_172230, index: -1, m_type: NTI169714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_172231;

}

function add_170800(parent_170802, kid_170803) {
	var F={procname:"vdom.add",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 253;
		if (parent_170802.kids != null) { parent_170802.kids.push(kid_170803); } else { parent_170802.kids = [kid_170803]; };
	framePtr = F.prev;

	
}

function tree_172246(kind_172248, kids_172250) {
	var result_172251 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_172251 = new_vnode_172228(kind_172248);
		L1: do {
			F.line = 263;
			var k_172282 = null;
			F.line = 3;
			var i_265305 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_265305 < (kids_172250 != null ? kids_172250.length : 0))) break L3;
						F.line = 263;
						k_172282 = kids_172250[chckIndx(i_265305, 0, kids_172250.length+0-1)-0];
						F.line = 263;
						add_170800(result_172251, k_172282);
						F.line = 6;
						i_265305 = addInt(i_265305, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_172251;

}

function text_172401(s_172403) {
	var result_172404 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 272;
		result_172404 = {kind: 0, text: s_172403, index: -1, m_type: NTI169714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_172404;

}

function render_question_255041(title_255043) {
	var result_255044 = null;

	var F={procname:"rendering.renderQuestion",prev:framePtr,filename:"rendering.nim",line:0};
	framePtr = F;
		F.line = 5;
		F.line = 5;
		var tmp_255087 = tree_172246(21, []);
		F.line = 5;
		tmp_255087.class = "title has-text-centered";
		F.line = 6;
		add_170800(tmp_255087, text_172401(title_255043));
		result_255044 = tmp_255087;
	framePtr = F.prev;

	return result_255044;

}

function set_attr_170568(n_170570, key_170571, val_170572) {
	var F={procname:"vdom.setAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((n_170570.attrs != null ? n_170570.attrs.length : 0) == 0)) {
		F.line = 216;
		n_170570.attrs = nimCopy(null, [key_170571, val_170572], NTI170587);
		}
		else {
			L1: do {
				F.line = 218;
				var i_170600 = 0;
				F.line = 2653;
				var colontmp__265317 = 0;
				F.line = 218;
				colontmp__265317 = subInt((n_170570.attrs != null ? n_170570.attrs.length : 0), 2);
				F.line = 2669;
				var res_265318 = 0;
				L2: do {
					F.line = 2670;
						L3: while (true) {
						if (!(res_265318 <= colontmp__265317)) break L3;
							F.line = 218;
							i_170600 = res_265318;
							if ((n_170570.attrs[chckIndx(i_170600, 0, n_170570.attrs.length+0-1)-0] == key_170571)) {
							F.line = 220;
							n_170570.attrs[chckIndx(addInt(i_170600, 1), 0, n_170570.attrs.length+0-1)-0] = val_170572;
							F.line = 221;
							break BeforeRet;
							}
							
							F.line = 2672;
							res_265318 = addInt(res_265318, 2);
						}
				} while(false);
			} while(false);
			F.line = 222;
			if (n_170570.attrs != null) { n_170570.attrs.push(key_170571); } else { n_170570.attrs = [key_170571]; };
			F.line = 223;
			if (n_170570.attrs != null) { n_170570.attrs.push(val_170572); } else { n_170570.attrs = [val_170572]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function text_172364(s_172366) {
	var result_172367 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 271;
		result_172367 = {kind: 0, text: toJSStr(s_172366), index: -1, m_type: NTI169714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_172367;

}

function add_event_listener_172721(n_172723, event_172724, handler_172725) {
	var F={procname:"vdom.addEventListener",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 295;
		if (n_172723.events != null) { n_172723.events.push({Field0: event_172724, Field1: handler_172725, Field2: null}); } else { n_172723.events = [{Field0: event_172724, Field1: handler_172725, Field2: null}]; };
	framePtr = F.prev;

	
}

function add_event_handler_197928(n_197930, k_197931, action_197932, kxi_197933) {

		function wrapper_197934(ev_197936, n_197937) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 708;
				action_197932(ev_197936, n_197937);
				if (!(kxi_197933.surpressRedraws)) {
				F.line = 709;
				redraw_197214(kxi_197933);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 710;
		add_event_listener_172721(n_197930, k_197931, wrapper_197934);
	framePtr = F.prev;

	
}

function render_choices_255114(choices_255117) {

						function HEX3Aanonymous_255161(ev_255163, n_255164) {
							var F={procname:"renderChoices.:anonymous",prev:framePtr,filename:"rendering.nim",line:0};
							framePtr = F;
								L1: do {
									F.line = 18;
									var btn_255214 = null;
									F.line = 183;
									var colontmp__265325 = null;
									F.line = 18;
									colontmp__265325 = document.querySelectorAll(".buttons .button");
									F.line = 185;
									var i_265327 = 0;
									F.line = 186;
									var l_265328 = (colontmp__265325 != null ? colontmp__265325.length : 0);
									L2: do {
										F.line = 187;
											L3: while (true) {
											if (!(i_265327 < l_265328)) break L3;
												F.line = 18;
												btn_255214 = colontmp__265325[chckIndx(i_265327, 0, colontmp__265325.length+0-1)-0];
												F.line = 19;
												btn_255214.blur();
												F.line = 189;
												i_265327 = addInt(i_265327, 1);
												if (!(((colontmp__265325 != null ? colontmp__265325.length : 0) == l_265328))) {
												F.line = 190;
												failed_assert_impl_15051(makeNimstrLit("/home/grfork/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
							framePtr = F.prev;

							
						}

	var result_255118 = null;

	var F={procname:"rendering.renderChoices",prev:framePtr,filename:"rendering.nim",line:0};
	framePtr = F;
		F.line = 13;
		F.line = 13;
		var tmp_255119 = tree_172246(43, []);
		F.line = 13;
		tmp_255119.class = "buttons are-medium is-centered";
		L1: do {
			F.line = 14;
			var choice_255155 = {response: null, path: null};
			F.line = 3;
			var i_265314 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_265314 < (choices_255117 != null ? choices_255117.length : 0))) break L3;
						F.line = 14;
						nimCopy(choice_255155, choices_255117[chckIndx(i_265314, 0, choices_255117.length+0-1)-0], NTI255111);
						F.line = 15;
						var tmp_255120 = tree_172246(44, []);
						F.line = 15;
						tmp_255120.class = "button is-primary is-outlined";
						F.line = 15;
						set_attr_170568(tmp_255120, "href", toJSStr((makeNimstrLit("#") || []).concat(choice_255155.path || [])));
						F.line = 16;
						add_170800(tmp_255120, text_172364(choice_255155.response));
						F.line = 17;
						add_event_handler_197928(tmp_255120, 16, HEX3Aanonymous_255161, kxi_189326[0]);
						F.line = 17;
						add_170800(tmp_255119, tmp_255120);
						F.line = 6;
						i_265314 = addInt(i_265314, 1);
					}
			} while(false);
		} while(false);
		result_255118 = tmp_255119;
	framePtr = F.prev;

	return result_255118;

}

function listen_for_keys_255272() {

		function HEX3Aanonymous_255275(ev_255277) {
			var F={procname:"listenForKeys.:anonymous",prev:framePtr,filename:"rendering.nim",line:0};
			framePtr = F;
				if ((ev_255277.keyCode == 82)) {
				F.line = 24;
				rawEcho(makeNimstrLit("Pressed r"));
				}
				
			framePtr = F.prev;

			
		}

	var result_255274 = null;

	var F={procname:"rendering.listenForKeys",prev:framePtr,filename:"rendering.nim",line:0};
	framePtr = F;
		F.line = 22;
		result_255274 = HEX3Aanonymous_255275;
		F.line = 25;
		document.addEventListener("keyup", result_255274, false);
	framePtr = F.prev;

	return result_255274;

}

function create_dom_264078(rd_264080) {
		var Tmp1;

	var result_264081 = null;

	var F={procname:"logic.createDom",prev:framePtr,filename:"logic.nim",line:0};
	framePtr = F;
		F.line = 30;
		if (!((rd_264080.hashPart == ""))) {
		Tmp1 = HEX5BHEX5D_84681(cstrToNimstr(rd_264080.hashPart), HEX2EHEX2E_84620(1, subInt((rd_264080.hashPart != null ? rd_264080.hashPart.length : 0), 1)));
		}
		else {
		Tmp1 = [];
		}
		
		var key_264239 = nimCopy(null, Tmp1, NTI138);
		F.line = 32;
		rawEcho(key_264239);
		F.line = 33;
		var screen_264767 = get_or_default_264586(question_screens_257414[0], toJSStr(key_264239), default_screen_257415[0]);
		F.line = 29;
		F.line = 29;
		var tmp_264768 = tree_172246(43, []);
		F.line = 29;
		tmp_264768.class = "hero is-dark is-fullheight";
		F.line = 30;
		var tmp_264769 = tree_172246(43, []);
		F.line = 30;
		tmp_264769.class = "hero-body";
		F.line = 31;
		var tmp_264770 = tree_172246(43, []);
		F.line = 31;
		tmp_264770.class = "container";
		F.line = 35;
		add_170800(tmp_264770, render_question_255041(toJSStr(screen_264767.title)));
		F.line = 36;
		add_170800(tmp_264770, render_choices_255114(screen_264767.choices));
		F.line = 36;
		add_170800(tmp_264769, tmp_264770);
		F.line = 36;
		add_170800(tmp_264768, tmp_264769);
		result_264081 = tmp_264768;
		F.line = 34;
		listen_for_keys_255272();
	framePtr = F.prev;

	return result_264081;

}

function main_265014() {
	var F={procname:"undarkness.main",prev:framePtr,filename:"undarkness.nim",line:0};
	framePtr = F;
		F.line = 6;
		init_logic_257470();
		set_renderer_197478(create_dom_264078, "ROOT", null);
	framePtr = F.prev;

	
}
main_265014();
