/* Generated by the Nim Compiler v0.20.2 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI4030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4052 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4054 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI179245 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI10287 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI179202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI179206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI179204 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI159015 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI179234 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI179231 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI179228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4060 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4114 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI4108 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI4026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI4050 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4050.node = NNI4050;
var NNI4028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4028.node = NNI4028;
NTI4108.base = NTI4026;
NTI4114.base = NTI4026;
var NNI4026 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI4108, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI4114, name: "up", sons: null}]};
NTI4026.node = NNI4026;
var NNI4008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4008.node = NNI4008;
NTI4026.base = NTI4008;
NTI4028.base = NTI4026;
NTI4050.base = NTI4028;
var NNI4060 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4060.node = NNI4060;
NTI4060.base = NTI4028;
var NNI4046 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4046.node = NNI4046;
var NNI4042 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4042.node = NNI4042;
NTI4042.base = NTI4028;
NTI4046.base = NTI4042;
var NNI4062 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4062.node = NNI4062;
NTI4062.base = NTI4028;
var NNI4044 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4044.node = NNI4044;
NTI4044.base = NTI4042;
var NNI4058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4058.node = NNI4058;
NTI4058.base = NTI4028;
var NNI179202 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI179202, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI179202, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI179202, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI179202, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI179202, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI179202, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI179202, name: "JArray", len: 0, sons: null}}};
NTI179202.node = NNI179202;
NTI179245.base = NTI179204;
var NNI179206 = {kind: 3, offset: "kind", len: 7, typ: NTI179202, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI138, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI10287, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI124, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI130, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI179228, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI179245, name: "elems", sons: null}]]};
NTI179206.node = NNI179206;
NTI179204.base = NTI179206;
var NNI179234 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI159015, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI179204, name: "Field3", sons: null}]};
NTI179234.node = NNI179234;
NTI179231.base = NTI179234;
var NNI179228 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI179231, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI179228.node = NNI179228;
var NNI4054 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4054.node = NNI4054;
var NNI4052 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4052.node = NNI4052;
var NNI4030 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4030.node = NNI4030;
NTI4030.base = NTI4026;
NTI4052.base = NTI4030;
NTI4054.base = NTI4052;

function cstrToNimstr(c_23271) {
		  var ln = c_23271.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23271.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23271.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_23288) {
		  if (s_23288 === null) return "";
  var len = s_23288.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_23288[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_23288[i] < 128)
      asciiPart[i] = fcc(s_23288[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24427, src_24428, ti_24429) {
	var result_24619 = null;

		switch (ti_24429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24401(ti_24429))) {
			result_24619 = src_24428;
			}
			else {
				result_24619 = [src_24428[0], src_24428[1]];
			}
			
			break;
		case 19:
			      if (dest_24427 === null || dest_24427 === undefined) {
        dest_24427 = {};
      }
      else {
        for (var key in dest_24427) { delete dest_24427[key]; }
      }
      for (var key in src_24428) { dest_24427[key] = src_24428[key]; }
      result_24619 = dest_24427;
    
			break;
		case 18:
		case 17:
			if (!((ti_24429.base == null))) {
			result_24619 = nimCopy(dest_24427, src_24428, ti_24429.base);
			}
			else {
			if ((ti_24429.kind == 17)) {
			result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {m_type: ti_24429} : dest_24427;
			}
			else {
				result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {} : dest_24427;
			}
			}
			nimCopyAux(result_24619, src_24428, ti_24429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24428 === null) {
        result_24619 = null;
      }
      else {
        if (dest_24427 === null || dest_24427 === undefined) {
          dest_24427 = new Array(src_24428.length);
        }
        else {
          dest_24427.length = src_24428.length;
        }
        result_24619 = dest_24427;
        for (var i = 0; i < src_24428.length; ++i) {
          result_24619[i] = nimCopy(result_24619[i], src_24428[i], ti_24429.base);
        }
      }
    
			break;
		case 28:
			      if (src_24428 !== null) {
        result_24619 = src_24428.slice(0);
      }
    
			break;
		default: 
			result_24619 = src_24428;
			break;
		}

	return result_24619;

}

function makeNimstrLit(c_23254) {
		  var ln = c_23254.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23254.charCodeAt(i);
  }
  return result;
  

	
}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		throw e_21618;

	
}
var ConstSet2 = setConstr(6);

function raiseFieldError(f_23039) {
		var e_23042 = null;
		e_23042 = {m_type: NTI4060, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_23042.message = nimCopy(null, (f_23039 || []).concat(makeNimstrLit(" is not accessible") || []), NTI138);
		e_23042.parent = null;
		raiseException(e_23042, "FieldError");

	
}

function addInt(a_23603, b_23604) {
		    var result = a_23603 + b_23604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckRange(i_24724, a_24725, b_24726) {
			var Tmp1;

	var result_24727 = 0;

	BeforeRet: do {
			if (!(a_24725 <= i_24724)) Tmp1 = false; else {				Tmp1 = (i_24724 <= b_24726);			}		if (Tmp1) {
		result_24727 = i_24724;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_24727;

}

function divInt(a_23657, b_23658) {
		    if (b_23658 == 0) raiseDivByZero();
    if (b_23658 == -1 && a_23657 == 2147483647) raiseOverflow();
    return Math.trunc(a_23657 / b_23658);
  

	
}

function subInt(a_23621, b_23622) {
		    var result = a_23621 - b_23622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_24705, a_24706, b_24707) {
			var Tmp1;

	var result_24708 = 0;

	BeforeRet: do {
			if (!(a_24706 <= i_24705)) Tmp1 = false; else {				Tmp1 = (i_24705 <= b_24707);			}		if (Tmp1) {
		result_24708 = i_24705;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_24705, a_24706, b_24707);
		}
		
	} while (false);

	return result_24708;

}

function eqStrings(a_23483, b_23484) {
		    if (a_23483 == b_23484) return true;
    if (a_23483 === null && b_23484.length == 0) return true;
    if (b_23484 === null && a_23483.length == 0) return true;
    if ((!a_23483) || (!b_23484)) return false;
    var alen = a_23483.length;
    if (alen != b_23484.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_23483[i] != b_23484[i]) return false;
    return true;
  

	
}

function mulInt(a_23639, b_23640) {
		    var result = a_23639 * b_23640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet3 = setConstr(5);
var ConstSet4 = setConstr(5);
var ConstSet5 = setConstr(5);
var ConstSet6 = setConstr(6);
var ConstSet7 = setConstr(4);
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_159237 = [0];
var env_computed_210407 = [false];
var environment_210409 = [null];

function is_fat_pointer_24401(ti_24403) {
	var result_24404 = false;

	BeforeRet: do {
		result_24404 = !((ConstSet1[ti_24403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24404;

}

function nimCopyAux(dest_24432, src_24433, n_24435) {
		switch (n_24435.kind) {
		case 0:
			break;
		case 1:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24435.sons.length; i++) {
      nimCopyAux(dest_24432, src_24433, n_24435.sons[i]);
    }
    
			break;
		case 3:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
      for (var i = 0; i < n_24435.sons.length; ++i) {
        nimCopyAux(dest_24432, src_24433, n_24435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function sys_fatal_14862(message_14866) {
		var e_15003 = null;
		e_15003 = {m_type: NTI4050, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_15003.message = nimCopy(null, message_14866, NTI138);
		raiseException(e_15003, "AssertionError");

	
}

function raise_assert_14858(msg_14860) {
		sys_fatal_14862(msg_14860);

	
}

function failed_assert_impl_15051(msg_15053) {
		raise_assert_14858(msg_15053);

	
}

function get_var_type_197509(x_197511) {
	var result_197512 = 0;

	BeforeRet: do {
		result_197512 = 0;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_197511)))) {
		case "[object Array]":
			result_197512 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			result_197512 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_197511 % 1.0000000000000000e+00 == 0.0)) {
			result_197512 = 2;
			break BeforeRet;
			}
			else {
				result_197512 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			result_197512 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			result_197512 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			result_197512 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			failed_assert_impl_15051(makeNimstrLit("json.nim(885, 18) `false` "));
			}
			
			break;
		}
	} while (false);

	return result_197512;

}

function new_jarray_179642() {
	var result_179644 = null;

		result_179644 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};

	return result_179644;

}

function len_197629(x_197631) {
	var result_197632 = 0;

		if (!((get_var_type_197509(x_197631) == 6))) {
		failed_assert_impl_15051(makeNimstrLit("json.nim(888, 12) `x.getVarType == JArray` "));
		}
		
		      result_197632 = x_197631.length;
    

	return result_197632;

}

function add_179976(father_179978, child_179979) {
		var Tmp1;
		var Tmp2;

		if (!((father_179978.kind == 6))) {
		failed_assert_impl_15051(makeNimstrLit("json.nim(289, 10) `father.kind == JArray` "));
		}
		
		var Tmp1 = father_179978;
		if (ConstSet2[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_179979); } else { Tmp2 = [child_179979]; };

	
}

function HEX5BHEX5D_198014(x_198016, y_198017) {
	var result_198018 = {};

		if (!((get_var_type_197509(x_198016) == 6))) {
		failed_assert_impl_15051(makeNimstrLit("json.nim(900, 12) `x.getVarType == JArray` "));
		}
		
		      result_198018 = x_198016[y_198017];
    

	return result_198018;

}

function raiseOverflow() {
		var e_22042 = null;
		e_22042 = {m_type: NTI4046, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22042.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_22042.parent = null;
		raiseException(e_22042, "OverflowError");

	
}

function is_power_of_two_59062(x_59064) {
		var Tmp1;

	var result_59065 = false;

	BeforeRet: do {
		if (!(0 < x_59064)) Tmp1 = false; else {			Tmp1 = ((x_59064 & (x_59064 - 1)) == 0);		}		result_59065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_59065;

}

function raiseRangeError() {
		var e_22441 = null;
		e_22441 = {m_type: NTI4062, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22441.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_22441.parent = null;
		raiseException(e_22441, "RangeError");

	
}

function init_ordered_table_179383(initial_size_179387) {
	var result_179389 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_59062(initial_size_179387))) {
		failed_assert_impl_15051(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_179389.counter = 0;
		result_179389.data = new Array(chckRange(initial_size_179387, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_179387, 0, 2147483647);++i) {result_179389.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_179389.first = -1;
		result_179389.last = -1;

	return result_179389;

}

function new_jobject_179378() {
	var result_179380 = null;

		result_179380 = {kind: 5, fields: init_ordered_table_179383(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};

	return result_179380;

}

function raiseDivByZero() {
		var e_22241 = null;
		e_22241 = {m_type: NTI4044, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22241.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		e_22241.parent = null;
		raiseException(e_22241, "DivByZeroError");

	
}

function raiseIndexError(i_22639, a_22640, b_22641) {
		var Tmp1;

		var e_22802 = null;
		e_22802 = {m_type: NTI4058, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22641 < a_22640)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22639)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22640)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22641)+"") || []);
		}
		
		e_22802.message = nimCopy(null, Tmp1, NTI138);
		e_22802.parent = null;
		raiseException(e_22802, "IndexError");

	
}

function HEX21HEX26_159031(h_159033, val_159034) {
	var result_159035 = 0;

		var h_159036 = (h_159033 >>> 0);
		var val_159037 = (val_159034 >>> 0);
		var res_159043 = ((h_159036 + val_159037) >>> 0);
		res_159043 = ((res_159043 + (res_159043 << 10)) >>> 0);
		res_159043 = (res_159043 ^ ((res_159043 >>> 0) >>> 6));
		result_159035 = (res_159043|0);

	return result_159035;

}

function hash_159869(x_159871) {
	var result_159872 = 0;

		result_159872 = x_159871;

	return result_159872;

}

function HEX21HEX24_159081(h_159083) {
	var result_159084 = 0;

		var h_159085 = (h_159083 >>> 0);
		var res_159098 = ((h_159085 + (h_159085 << 3)) >>> 0);
		res_159098 = (res_159098 ^ ((res_159098 >>> 0) >>> 11));
		res_159098 = ((res_159098 + (res_159098 << 15)) >>> 0);
		result_159084 = (res_159098|0);

	return result_159084;

}

function hash_159980(x_159982) {
	var result_159983 = 0;

		var element_size_159985 = 1;
		var step_size_159986 = divInt(4, element_size_159985);
		var i_159987 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_159987 <= subInt(addInt((x_159982 != null ? (x_159982.length-1) : -1), 1), step_size_159986))) break L2;
					var n_159988 = 0;
					n_159988 = x_159982[chckIndx(i_159987, 0, x_159982.length+0-1)-0];
					result_159983 = HEX21HEX26_159031(result_159983, n_159988);
					i_159987 = addInt(i_159987, step_size_159986);
				}
		} while(false);
		L3: do {
			var i_160207 = 0;
			var colontmp__232078 = 0;
			colontmp__232078 = (x_159982 != null ? (x_159982.length-1) : -1);
			var res_232079 = i_159987;
			L4: do {
					L5: while (true) {
					if (!(res_232079 <= colontmp__232078)) break L5;
						i_160207 = res_232079;
						result_159983 = HEX21HEX26_159031(result_159983, hash_159869(x_159982[chckIndx(i_160207, 0, x_159982.length+0-1)-0]));
						res_232079 = addInt(res_232079, 1);
					}
			} while(false);
		} while(false);
		result_159983 = HEX21HEX24_159081(result_159983);

	return result_159983;

}

function is_filled_163418(hcode_163420) {
	var result_163421 = false;

		result_163421 = !((hcode_163420 == 0));

	return result_163421;

}

function next_try_163435(h_163437, max_hash_163438) {
	var result_163439 = 0;

		result_163439 = (addInt(h_163437, 1) & max_hash_163438);

	return result_163439;

}

function raw_get_180821(t_180826, key_180827, hc_180828, hc_180828_Idx) {
						var Tmp3;

	var result_180829 = 0;

	BeforeRet: do {
		hc_180828[hc_180828_Idx] = hash_159980(key_180827);
		if ((hc_180828[hc_180828_Idx] == 0)) {
		hc_180828[hc_180828_Idx] = 314159265;
		}
		
		if (((t_180826.data != null ? t_180826.data.length : 0) == 0)) {
		result_180829 = -1;
		break BeforeRet;
		}
		
		var h_180971 = (hc_180828[hc_180828_Idx] & (t_180826.data != null ? (t_180826.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_163418(t_180826.data[chckIndx(h_180971, 0, t_180826.data.length+0-1)-0].Field0)) break L2;
						if (!(t_180826.data[chckIndx(h_180971, 0, t_180826.data.length+0-1)-0].Field0 == hc_180828[hc_180828_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_180826.data[chckIndx(h_180971, 0, t_180826.data.length+0-1)-0].Field2, key_180827);						}					if (Tmp3) {
					result_180829 = h_180971;
					break BeforeRet;
					}
					
					h_180971 = next_try_163435(h_180971, (t_180826.data != null ? (t_180826.data.length-1) : -1));
				}
		} while(false);
		result_180829 = subInt(-1, h_180971);
	} while (false);

	return result_180829;

}

function must_rehash_163453(length_163455, counter_163456) {
	var result_163457 = false;

		if (!((counter_163456 < length_163455))) {
		failed_assert_impl_15051(makeNimstrLit("hashcommon.nim(33, 9) `length > counter` "));
		}
		
		result_163457 = ((mulInt(length_163455, 2) < mulInt(counter_163456, 3)) || (subInt(length_163455, counter_163456) < 4));

	return result_163457;

}

function raw_insert_183265(t_183271, data_183274, data_183274_Idx, key_183275, val_183276, hc_183277, h_183278) {
		data_183274[data_183274_Idx][chckIndx(h_183278, 0, data_183274[data_183274_Idx].length+0-1)-0].Field2 = nimCopy(null, key_183275, NTI138);
		data_183274[data_183274_Idx][chckIndx(h_183278, 0, data_183274[data_183274_Idx].length+0-1)-0].Field3 = val_183276;
		data_183274[data_183274_Idx][chckIndx(h_183278, 0, data_183274[data_183274_Idx].length+0-1)-0].Field0 = hc_183277;
		data_183274[data_183274_Idx][chckIndx(h_183278, 0, data_183274[data_183274_Idx].length+0-1)-0].Field1 = -1;
		if ((t_183271.first < 0)) {
		t_183271.first = h_183278;
		}
		
		if ((0 <= t_183271.last)) {
		data_183274[data_183274_Idx][chckIndx(t_183271.last, 0, data_183274[data_183274_Idx].length+0-1)-0].Field1 = h_183278;
		}
		
		t_183271.last = h_183278;

	
}

function enlarge_182167(t_182173) {
		var n_182181 = null;
		n_182181 = new Array(chckRange(mulInt((t_182173.data != null ? t_182173.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_182173.data != null ? t_182173.data.length : 0), 2), 0, 2147483647);++i) {n_182181[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_182320 = t_182173.first;
		t_182173.first = -1;
		t_182173.last = -1;
		var Tmp1 = t_182173.data; t_182173.data = n_182181; n_182181 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_182320)) break L3;
					var nxt_182479 = n_182181[chckIndx(h_182320, 0, n_182181.length+0-1)-0].Field1;
					var eh_182628 = n_182181[chckIndx(h_182320, 0, n_182181.length+0-1)-0].Field0;
					if (is_filled_163418(eh_182628)) {
					var j_182635 = (eh_182628 & (t_182173.data != null ? (t_182173.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_163418(t_182173.data[chckIndx(j_182635, 0, t_182173.data.length+0-1)-0].Field0)) break L5;
								j_182635 = next_try_163435(j_182635, (t_182173.data != null ? (t_182173.data.length-1) : -1));
							}
					} while(false);
					raw_insert_183265(t_182173, t_182173, "data", n_182181[chckIndx(h_182320, 0, n_182181.length+0-1)-0].Field2, n_182181[chckIndx(h_182320, 0, n_182181.length+0-1)-0].Field3, n_182181[chckIndx(h_182320, 0, n_182181.length+0-1)-0].Field0, j_182635);
					}
					
					h_182320 = nxt_182479;
				}
		} while(false);

	
}

function raw_get_known_hc_184082(t_184087, key_184088, hc_184089) {
	var result_184090 = 0;

	BeforeRet: do {
		if (((t_184087.data != null ? t_184087.data.length : 0) == 0)) {
		result_184090 = -1;
		break BeforeRet;
		}
		
		var h_184229 = (hc_184089 & (t_184087.data != null ? (t_184087.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_163418(t_184087.data[chckIndx(h_184229, 0, t_184087.data.length+0-1)-0].Field0)) break L2;
					if (((t_184087.data[chckIndx(h_184229, 0, t_184087.data.length+0-1)-0].Field0 == hc_184089) && eqStrings(t_184087.data[chckIndx(h_184229, 0, t_184087.data.length+0-1)-0].Field2, key_184088))) {
					result_184090 = h_184229;
					break BeforeRet;
					}
					
					h_184229 = next_try_163435(h_184229, (t_184087.data != null ? (t_184087.data.length-1) : -1));
				}
		} while(false);
		result_184090 = subInt(-1, h_184229);
	} while (false);

	return result_184090;

}

function HEX5BHEX5DHEX3D_180311(t_180317, key_180318, val_180319) {
		if (((t_180317.data != null ? t_180317.data.length : 0) == 0)) {
		if (!(is_power_of_two_59062(64))) {
		failed_assert_impl_15051(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_180317.counter = 0;
		t_180317.data = new Array(64); for (var i=0;i<64;++i) {t_180317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_180317.first = -1;
		t_180317.last = -1;
		}
		
		var hc_180801 = [0];
		var index_181439 = raw_get_180821(t_180317, key_180318, hc_180801, 0);
		if ((0 <= index_181439)) {
		t_180317.data[chckIndx(index_181439, 0, t_180317.data.length+0-1)-0].Field3 = val_180319;
		}
		else {
			if (((t_180317.data != null ? t_180317.data.length : 0) == 0)) {
			if (!(is_power_of_two_59062(64))) {
			failed_assert_impl_15051(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_180317.counter = 0;
			t_180317.data = new Array(64); for (var i=0;i<64;++i) {t_180317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_180317.first = -1;
			t_180317.last = -1;
			}
			
			if (must_rehash_163453((t_180317.data != null ? t_180317.data.length : 0), t_180317.counter)) {
			enlarge_182167(t_180317);
			index_181439 = raw_get_known_hc_184082(t_180317, key_180318, hc_180801[0]);
			}
			
			index_181439 = subInt(-1, index_181439);
			raw_insert_183265(t_180317, t_180317, "data", key_180318, val_180319, hc_180801[0], index_181439);
			t_180317.counter = addInt(t_180317.counter, 1);
		}
		

	
}

function HEX5BHEX5DHEX3D_185214(obj_185216, key_185217, val_185218) {
		var Tmp1;

		if (!((obj_185216.kind == 5))) {
		failed_assert_impl_15051(makeNimstrLit("json.nim(363, 9) `obj.kind == JObject` "));
		}
		
		var Tmp1 = obj_185216;
		if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		HEX5BHEX5DHEX3D_180311(Tmp1.fields, key_185217, val_185218);

	
}

function new_jint_179311(n_179313) {
	var result_179314 = null;

		result_179314 = {kind: 2, num: n_179313, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

	return result_179314;

}

function new_jfloat_179328(n_179330) {
	var result_179331 = null;

		result_179331 = {kind: 3, fnum: n_179330, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

	return result_179331;

}

function new_jstring_179261(s_179263) {
	var result_179264 = null;

		result_179264 = {kind: 4, str: nimCopy(null, s_179263, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

	return result_179264;

}

function new_jbool_179345(b_179347) {
	var result_179348 = null;

		result_179348 = {kind: 1, bval: b_179347, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

	return result_179348;

}

function new_jnull_179362() {
	var result_179364 = null;

		result_179364 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

	return result_179364;

}

function convert_object_198214(x_198216) {
	var result_198217 = null;

		switch (get_var_type_197509(x_198216)) {
		case 6:
			result_198217 = new_jarray_179642();
			L1: do {
				var i_198225 = 0;
				var colontmp__232050 = 0;
				colontmp__232050 = len_197629(x_198216);
				var i_232051 = 0;
				L2: do {
						L3: while (true) {
						if (!(i_232051 < colontmp__232050)) break L3;
							i_198225 = i_232051;
							add_179976(result_198217, convert_object_198214(HEX5BHEX5D_198014(x_198216, i_198225)));
							i_232051 = addInt(i_232051, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			result_198217 = new_jobject_179378();
			for (var property in x_198216) {
        if (x_198216.hasOwnProperty(property)) {
      
			var nim_property_198227 = null;
			var nim_value_198228 = {};
			nim_property_198227 = property; nim_value_198228 = x_198216[property];
			HEX5BHEX5DHEX3D_185214(result_198217, cstrToNimstr(nim_property_198227), convert_object_198214(nim_value_198228));
			}}
			break;
		case 2:
			result_198217 = new_jint_179311(x_198216);
			break;
		case 3:
			result_198217 = new_jfloat_179328(x_198216);
			break;
		case 4:
			result_198217 = new_jstring_179261(cstrToNimstr(x_198216));
			break;
		case 1:
			result_198217 = new_jbool_179345(x_198216);
			break;
		case 0:
			result_198217 = new_jnull_179362();
			break;
		}

	return result_198217;

}

function parse_json_198257(buffer_198259) {
	var result_198260 = null;

	BeforeRet: do {
		result_198260 = convert_object_198214(JSON.parse(toJSStr(buffer_198259)));
		break BeforeRet;
	} while (false);

	return result_198260;

}

function len_186765(t_186770) {
	var result_186771 = 0;

		result_186771 = t_186770.counter;

	return result_186771;

}

function raw_get_188134(t_188138, key_188139, hc_188140, hc_188140_Idx) {
						var Tmp3;

	var result_188141 = 0;

	BeforeRet: do {
		hc_188140[hc_188140_Idx] = hash_159980(key_188139);
		if ((hc_188140[hc_188140_Idx] == 0)) {
		hc_188140[hc_188140_Idx] = 314159265;
		}
		
		if (((t_188138.data != null ? t_188138.data.length : 0) == 0)) {
		result_188141 = -1;
		break BeforeRet;
		}
		
		var h_188283 = (hc_188140[hc_188140_Idx] & (t_188138.data != null ? (t_188138.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_163418(t_188138.data[chckIndx(h_188283, 0, t_188138.data.length+0-1)-0].Field0)) break L2;
						if (!(t_188138.data[chckIndx(h_188283, 0, t_188138.data.length+0-1)-0].Field0 == hc_188140[hc_188140_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_188138.data[chckIndx(h_188283, 0, t_188138.data.length+0-1)-0].Field2, key_188139);						}					if (Tmp3) {
					result_188141 = h_188283;
					break BeforeRet;
					}
					
					h_188283 = next_try_163435(h_188283, (t_188138.data != null ? (t_188138.data.length-1) : -1));
				}
		} while(false);
		result_188141 = subInt(-1, h_188283);
	} while (false);

	return result_188141;

}

function HEX5BHEX5D_188122(t_188128, key_188129) {
	var result_188131 = null;
	var result_188131_Idx = 0;

		var hc_188132 = [0];
		var index_188133 = raw_get_188134(t_188128, key_188129, hc_188132, 0);
		if ((0 <= index_188133)) {
		result_188131 = t_188128.data[chckIndx(index_188133, 0, t_188128.data.length+0-1)-0]; result_188131_Idx = "Field3";
		}
		else {
			var e_189003 = null;
			e_189003 = {m_type: NTI4054, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_189003.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_188129 || []), NTI138);
			e_189003.parent = null;
			raiseException(e_189003, "KeyError");
		}
		

	return [result_188131, result_188131_Idx];

}

function HEX5BHEX5D_189639(node_189641, name_189642) {
		var Tmp1;
		var Tmp2;

	var result_189643 = null;

		if (!(!((node_189641 == null)))) {
		failed_assert_impl_15051(makeNimstrLit("json.nim(485, 9) `not isNil(node)` "));
		}
		
		if (!((node_189641.kind == 5))) {
		failed_assert_impl_15051(makeNimstrLit("json.nim(486, 9) `node.kind == JObject` "));
		}
		
		var Tmp1 = node_189641;
		if (ConstSet5[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		result_189643 = (Tmp2 = HEX5BHEX5D_188122(Tmp1.fields, name_189642), Tmp2)[0][Tmp2[1]];

	return result_189643;

}

function get_str_179671(n_179673, default_179674) {
			var Tmp1;
			var Tmp2;

	var result_179675 = null;

	BeforeRet: do {
			if ((n_179673 == null)) Tmp1 = true; else {				Tmp1 = !((n_179673.kind == 4));			}		if (Tmp1) {
		result_179675 = nimCopy(null, default_179674, NTI138);
		break BeforeRet;
		}
		else {
			var Tmp2 = n_179673;
			if (ConstSet7[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
			result_179675 = nimCopy(null, Tmp2.str, NTI138);
			break BeforeRet;
		}
		
	} while (false);

	return result_179675;

}

function create_dom_231075() {

		function HEX3Aanonymous_231111() {

				function inner_231131() {
					var result_231133 = null;

					BeforeRet: do {
						var a_231134 = null;
						a_231134 = {};
						result_231133 = a_231134;
						break BeforeRet;
					} while (false);

					return result_231133;

				}

			var result_231114 = null;

				result_231114 = inner_231131();

			return result_231114;

		}
				var Tmp3;

							function inner_231186() {
								var result_231188 = null;

								BeforeRet: do {
									var a_231189 = null;
									a_231189 = {};
									a_231189.label = toJSStr(name_231173);
									a_231189.rx = 5;
									a_231189.ry = 5;
									result_231188 = a_231189;
									break BeforeRet;
								} while (false);

								return result_231188;

							}
									var Tmp8;

		function HEX3Aanonymous_231762() {
				inner_231754.attr(("transform"), (d3.event.transform));

			
		}

		var questions_json_231077 = parse_json_198257(makeNimstrLit("{\x0A\x09\"afraid\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"dont-be-afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid I might want to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"dont-be-afraid\",\x0A\x09\x09\x09\x09\"response\": \"It\'s just scaring me\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What are you afraid of?\"\x0A\x09},\x0A\x09\"almost-lost\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"remorse\",\x0A\x09\x09\x09\x09\"response\": \"Hey, I\'m sorry\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"lost\",\x0A\x09\x09\x09\x09\"response\": \"F* you!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Alright. No game. Okay.\"\x0A\x09},\x0A\x09\"am-right\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"want-to-play\",\x0A\x09\x09\x09\x09\"response\": \"So.. are we playing the game?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Yes, thank you\"\x0A\x09},\x0A\x09\"anhedonia\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Okay...\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"reject-playing\",\x0A\x09\x09\x09\x09\"response\": \"No, I\'m not playing!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Please, press \\\"Okay\\\" to play the game.\"\x0A\x09},\x0A\x09\"another-game\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"Okay, let\'s play another game\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game-desc\",\x0A\x09\x09\x09\x09\"response\": \"What\'s another game?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"How about another game?\"\x0A\x09},\x0A\x09\"black-door1\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door2\",\x0A\x09\x09\x09\x09\"response\": \"Silence, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door2\",\x0A\x09\x09\x09\x09\"response\": \"K-pop?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door2\",\x0A\x09\x09\x09\x09\"response\": \"Maybe classical music?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the music of life?\"\x0A\x09},\x0A\x09\"black-door2\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door3\",\x0A\x09\x09\x09\x09\"response\": \"Solace, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door3\",\x0A\x09\x09\x09\x09\"response\": \"Wait, what?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door3\",\x0A\x09\x09\x09\x09\"response\": \"I don\'t like it\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the gift of death?\"\x0A\x09},\x0A\x09\"black-door3\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door4\",\x0A\x09\x09\x09\x09\"response\": \"Sanguine, my broher\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door4\",\x0A\x09\x09\x09\x09\"response\": \"Like, black?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door4\",\x0A\x09\x09\x09\x09\"response\": \"Why would you ask that?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the color of night?\"\x0A\x09},\x0A\x09\"black-door4\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door5\",\x0A\x09\x09\x09\x09\"response\": \"Sublime, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door5\",\x0A\x09\x09\x09\x09\"response\": \"Salty?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door5\",\x0A\x09\x09\x09\x09\"response\": \"Spiders?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is the flavor of fear?\"\x0A\x09},\x0A\x09\"black-door5\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"door-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Innocence, my brother\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"door-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"My self-esteem?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"door-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Our ability to control the world\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is life\'s greatest illusion?\"\x0A\x09},\x0A\x09\"confused\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cruelty\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to do just one thing - make sure you are dead\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"confused-more\",\x0A\x09\x09\x09\x09\"response\": \"What are you talking about?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"(just do the role-playing as we agreed) So, why are you here?\"\x0A\x09},\x0A\x09\"confused-more\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"questionable-agreeing\",\x0A\x09\x09\x09\x09\"response\": \"Oh no, no, now I remember\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"in-the-wrong-place\",\x0A\x09\x09\x09\x09\"response\": \"No! What is this?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Wait, didn\'t we talk before?\"\x0A\x09},\x0A\x09\"cruelty\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Cruelty path\"\x0A\x09},\x0A\x09\"cucumber-or-tomatoe\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"red-or-yellow\",\x0A\x09\x09\x09\x09\"response\": \"Cucumber\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"red-or-yellow\",\x0A\x09\x09\x09\x09\"response\": \"Tomatoe\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Cucumber or tomatoe?\"\x0A\x09},\x0A\x09\"daring\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"self-confident\",\x0A\x09\x09\x09\x09\"response\": \"Self-confident\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"presumptuous\",\x0A\x09\x09\x09\x09\"response\": \"Presumptuous\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Self-confident or presumptuous?\"\x0A\x09},\x0A\x09\"difference-desc\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"I hope so, let\'s go\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"irritative-asking\",\x0A\x09\x09\x09\x09\"response\": \"Is it so hard to tell me how it is different?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"It is like.. very different, substantially different\"\x0A\x09},\x0A\x09\"disclosure\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Disclosure\"\x0A\x09},\x0A\x09\"dont-be-afraid\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Yes, I like games!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"anhedonia\",\x0A\x09\x09\x09\x09\"response\": \"No, I don\'t want to play\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Don\'t be afraid. Let\'s play a game!\"\x0A\x09},\x0A\x09\"door-test-passed\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Summary of door test\"\x0A\x09},\x0A\x09\"gabriela-order\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"psycho\",\x0A\x09\x09\x09\x09\"response\": \"You are the chosen one and now is the time\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"disclosure\",\x0A\x09\x09\x09\x09\"response\": \"I just said something stupid, sorry..\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What a heck are you talking about?!\"\x0A\x09},\x0A\x09\"haggler\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"disclosure\",\x0A\x09\x09\x09\x09\"response\": \"I\'m so sorry...\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are pathetic.\"\x0A\x09},\x0A\x09\"happy-game\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Happy game!\"\x0A\x09},\x0A\x09\"in-the-wrong-place\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"negotiating\",\x0A\x09\x09\x09\x09\"response\": \"Hey, wait, let\'s talk!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"gabriela-order\",\x0A\x09\x09\x09\x09\"response\": \"I was sent by the holy order of Gabriela\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are not supposed to be here\"\x0A\x09},\x0A\x09\"irritative-asking\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"am-right\",\x0A\x09\x09\x09\x09\"response\": \"You are right\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"almost-lost\",\x0A\x09\x09\x09\x09\"response\": \"This is because you didn\'t tell me\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You don\'t even know a thing about the first game\"\x0A\x09},\x0A\x09\"killing\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cruelty\",\x0A\x09\x09\x09\x09\"response\": \"Real bad\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"pretending\",\x0A\x09\x09\x09\x09\"response\": \"Ha-ha, I was just joking\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"How bad do you want to kill me?\"\x0A\x09},\x0A\x09\"lost\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"welcome\",\x0A\x09\x09\x09\x09\"response\": \"Play again\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You have lost the game\"\x0A\x09},\x0A\x09\"negotiating\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"haggler\",\x0A\x09\x09\x09\x09\"response\": \"I have money, kitchen silver!..\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"occult-offering\",\x0A\x09\x09\x09\x09\"response\": \"I shall give you my soul and body\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"And what do you have to offer?\"\x0A\x09},\x0A\x09\"occult-offering\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Write down your name to complete the ritual\"\x0A\x09},\x0A\x09\"presumptuous\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cucumber-or-tomatoe\",\x0A\x09\x09\x09\x09\"response\": \"Self-critical\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"self-pitying\",\x0A\x09\x09\x09\x09\"response\": \"Self-pitying\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Self-critical or self-pitying?\"\x0A\x09},\x0A\x09\"pretending\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"pussy\",\x0A\x09\x09\x09\x09\"response\": \"Yes\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"cruelty\",\x0A\x09\x09\x09\x09\"response\": \"No, actually I want to kill you\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Were you really joking?\"\x0A\x09},\x0A\x09\"psycho\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"lost\",\x0A\x09\x09\x09\x09\"response\": \"HAHAHAHAHAHA\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are a freaking psycho, go away\"\x0A\x09},\x0A\x09\"pussy\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"confused\",\x0A\x09\x09\x09\x09\"response\": \"What?..\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"daring\",\x0A\x09\x09\x09\x09\"response\": \"No, I can kill you!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"You are weak. You are not able to do what is needed.\"\x0A\x09},\x0A\x09\"questionable-agreeing\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"subterfuge\",\x0A\x09\x09\x09\x09\"response\": \"Oh no, I\'m not lying\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"regret\",\x0A\x09\x09\x09\x09\"response\": \"Yes, I shouldn\'t have..\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"I think you are lying!\"\x0A\x09},\x0A\x09\"red-or-yellow\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"silly-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Red\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"silly-test-passed\",\x0A\x09\x09\x09\x09\"response\": \"Yellow\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Red or yellow?\"\x0A\x09},\x0A\x09\"regret\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door1\",\x0A\x09\x09\x09\x09\"response\": \"Okay, ask!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"black-door1\",\x0A\x09\x09\x09\x09\"response\": \"Whatever\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Correct. Now. If you want to stay, answer my questions.\"\x0A\x09},\x0A\x09\"reject-playing\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Okay, let me play your game\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"almost-lost\",\x0A\x09\x09\x09\x09\"response\": \"I don\'t care!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"If you don\'t choose to play, you will lose now.\"\x0A\x09},\x0A\x09\"remorse\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Yes, let\'s play\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"another-game\",\x0A\x09\x09\x09\x09\"response\": \"I still don\'t want to play\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"So are we playing the game?\"\x0A\x09},\x0A\x09\"sad-game\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Sad game\"\x0A\x09},\x0A\x09\"sad-game-desc\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"Alright, alright, let\'s play\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"difference-desc\",\x0A\x09\x09\x09\x09\"response\": \"And how is it different?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"It is a game that is different from the first\"\x0A\x09},\x0A\x09\"self-confident\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"killing\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Hmmm, I see. So let me ask again. What is your purpose?\"\x0A\x09},\x0A\x09\"self-pitying\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"welcome-repeat\",\x0A\x09\x09\x09\x09\"response\": \"Fine, thanks..\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"therapy\",\x0A\x09\x09\x09\x09\"response\": \"I will never be like others!\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Oh come on, you are just fine!\"\x0A\x09},\x0A\x09\"silly-test-passed\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"what-now\",\x0A\x09\x09\x09\x09\"response\": \"So, what\'s now?\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"what-now\",\x0A\x09\x09\x09\x09\"response\": \"Do I get a cookie?\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Congratulations. All questions were answered correctly.\"\x0A\x09},\x0A\x09\"subterfuge\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Do something to determine success\"\x0A\x09},\x0A\x09\"therapy\": {\x0A\x09\x09\"choices\": [],\x0A\x09\x09\"title\": \"Therapy path\"\x0A\x09},\x0A\x09\"want-to-play\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"The first game\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"sad-game\",\x0A\x09\x09\x09\x09\"response\": \"The second one\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Oh, this is so great! Which game do you want to play?\"\x0A\x09},\x0A\x09\"welcome\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"killing\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"What is your purpose?\"\x0A\x09},\x0A\x09\"welcome-repeat\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"killing\",\x0A\x09\x09\x09\x09\"response\": \"I\'m here to kill you\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"afraid\",\x0A\x09\x09\x09\x09\"response\": \"I\'m afraid\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"So what is your purpose?\"\x0A\x09},\x0A\x09\"what-now\": {\x0A\x09\x09\"choices\": [\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"happy-game\",\x0A\x09\x09\x09\x09\"response\": \"Yes, I do!\"\x0A\x09\x09\x09},\x0A\x09\x09\x09{\x0A\x09\x09\x09\x09\"path\": \"reject-playing\",\x0A\x09\x09\x09\x09\"response\": \"Not really..\"\x0A\x09\x09\x09}\x0A\x09\x09],\x0A\x09\x09\"title\": \"Now we play the game. Do you like games?\"\x0A\x09}\x0A}\x0A"));
		var g_231171 = (new dagreD3.graphlib.Graph()).setGraph(({})).setDefaultEdgeLabel((HEX3Aanonymous_231111));
		L1: do {
			var name_231173 = null;
			var obj_231174 = null;
			if (!((questions_json_231077.kind == 5))) {
			failed_assert_impl_15051(makeNimstrLit("json.nim(778, 10) `node.kind == JObject` "));
			}
			
			L2: do {
				var key_232037 = null;
				var val_232038 = null;
				var colontmp__232039 = {data: null, counter: 0, first: 0, last: 0};
				var Tmp3 = questions_json_231077;
				if (ConstSet4[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
				nimCopy(colontmp__232039, Tmp3.fields, NTI179228);
				var l_232040 = len_186765(colontmp__232039);
				if ((0 < colontmp__232039.counter)) {
				var h_232041 = colontmp__232039.first;
				L4: do {
						L5: while (true) {
						if (!(0 <= h_232041)) break L5;
							var nxt_232043 = colontmp__232039.data[chckIndx(h_232041, 0, colontmp__232039.data.length+0-1)-0].Field1;
							if (is_filled_163418(colontmp__232039.data[chckIndx(h_232041, 0, colontmp__232039.data.length+0-1)-0].Field0)) {
							key_232037 = colontmp__232039.data[chckIndx(h_232041, 0, colontmp__232039.data.length+0-1)-0].Field2;
							val_232038 = colontmp__232039.data[chckIndx(h_232041, 0, colontmp__232039.data.length+0-1)-0].Field3;
							name_231173 = key_232037;
							obj_231174 = val_232038;
							g_231171.setNode((toJSStr(name_231173)), (inner_231186()));
							L6: do {
								var choice_231638 = null;
								var colontmp__232016 = null;
								colontmp__232016 = HEX5BHEX5D_189639(obj_231174, makeNimstrLit("choices"));
								if (!((colontmp__232016.kind == 6))) {
								failed_assert_impl_15051(makeNimstrLit("json.nim(765, 10) `node.kind == JArray` "));
								}
								
								L7: do {
									var i_232024 = null;
									var colontmp__232025 = null;
									var Tmp8 = colontmp__232016;
									if (ConstSet6[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
									colontmp__232025 = Tmp8.elems;
									var i_232026 = 0;
									var l_232027 = (colontmp__232025 != null ? colontmp__232025.length : 0);
									L9: do {
											L10: while (true) {
											if (!(i_232026 < l_232027)) break L10;
												i_232024 = colontmp__232025[chckIndx(i_232026, 0, colontmp__232025.length+0-1)-0];
												choice_231638 = i_232024;
												g_231171.setEdge((toJSStr(name_231173)), (toJSStr(get_str_179671(HEX5BHEX5D_189639(choice_231638, makeNimstrLit("path")), []))));
												i_232026 = addInt(i_232026, 1);
												if (!(((colontmp__232025 != null ? colontmp__232025.length : 0) == l_232027))) {
												failed_assert_impl_15051(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
							} while(false);
							if (!((len_186765(colontmp__232039) == l_232040))) {
							failed_assert_impl_15051(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							h_232041 = nxt_232043;
						}
				} while(false);
				}
				
			} while(false);
		} while(false);
		L11: do {
			var node_231661 = null;
			var colontmp__232046 = null;
			colontmp__232046 = g_231171.nodes();
			var v_232047 = null;
			for (var k in colontmp__232046) {
			  if (!colontmp__232046.hasOwnProperty(k)) continue;
			  v_232047=colontmp__232046[k];
			node_231661 = v_232047;
			if ((g_231171.isLeaf((node_231661)))) {
			g_231171.node((node_231661)).style = "fill: red";
			}
			
			}
		} while(false);
		var d3render_231721 = ((new dagreD3.render()));
		var svg_231732 = d3.select(("svg"));
		var svg_group_231743 = svg_231732.append(("g"));
		var inner_231754 = svg_231732.select(("g"));
		var zoom_231813 = d3.zoom().on(("zoom"), (HEX3Aanonymous_231762));
		svg_231732.call((zoom_231813));
		d3render_231721(inner_231754, g_231171);
		console.log((g_231171));
		var initial_scale_231838 = (5.9999999999999998e-01);
		svg_231732.call((zoom_231813.transform), (d3.zoomIdentity.translate((((svg_231732.attr(("width")) - (g_231171.graph().width * initial_scale_231838)) / (2))), ((20))).scale((initial_scale_231838))));
		svg_231732.attr(("height"), (((g_231171.graph().height * initial_scale_231838) + (40))));

	
}

function main_231957() {
		create_dom_231075();

	
}
main_231957();
